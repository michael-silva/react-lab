{"version":3,"sources":["components/code/Code.js","pages/ErrorBoudary/ErrorBoudary.js","pages/Pooling/worker.js","pages/Pooling/workerSetup.js","pages/Pooling/Pooling.js","pages/WebWorker/worker.js","pages/WebWorker/workerSetup.js","pages/WebWorker/WebWorker.js","pages/Random/Random.js","pages/Lifecycle/Lifecycle.js","pages/Forms/Forms.js","logo.svg","pages/Fetch/useDataApiReducer.js","pages/Fetch/withDataFetching.js","pages/Fetch/Fetch.js","pages/DynamicComponent/DynamicComponent.js","pages/CoolPortal/CoolPortal.js","App.js","reportWebVitals.js","index.js"],"names":["Code","children","lang","ref","useRef","useLayoutEffect","current","window","hljs","highlightElement","className","defaultProps","promiseTimeout","callback","timeout","Promise","resolve","reject","setTimeout","args","result","e","useSecureCallback","deps","useState","error","setError","fn","useCallback","a","ErrorFallback","React","memo","errorInfo","style","whiteSpace","toString","componentStack","ErrorBoundary","props","state","this","setState","FallbackElement","fallback","Component","RenderErrorButton","id","hasError","setHasError","Error","type","onClick","AsyncRenderErrorButton","delay","AsyncUncatchErrorButton","UncatchErrorButton","SecureUncatchErrorBox","text","useEffect","useSecureEffect","SecureUncatchErrorButton","clickHandle","SecureUncatchAsyncErrorButton","CustomFallback","ErrorBoudaryPage","showError","setShowError","href","self","addEventListener","data","names","query","filteredNames","filter","name","toLowerCase","includes","postMessage","WebWorker","worker","code","blob","Blob","Worker","URL","createObjectURL","usePooling","interval","lastExecution","setLastExecution","isDismounted","Date","now","timer","console","log","clearTimeout","PoolingNumber","number","setNumber","loading","setLoading","firstLoading","mounted","useSafeTimeout","Math","random","renderCount","WebWorkerFilterList","setNames","setQuery","debouncedChangeHandler","useMemo","debounce","event","target","value","cancel","workerFile","terminate","LIST_NAMES","onChange","placeholder","map","Pooling","users","userDetails","email","i","dateJoined","push","LocalCounter","count","setCount","time","setTime","start","length","WebWorkerCounter","WebWorkerPage","ToggleContext","createContext","useToggleContext","context","useContext","Switch","on","checked","Toggle","onToggle","setOn","toggle","oldOn","Provider","On","Off","Button","ToogleApp","Slider","navigator","title","Children","Slide","SliderApp","renderNavigator","styles","display","listStyle","padding","border","flexWrap","borderBottom","borderRight","cursor","justifyContent","minWidth","width","ShoppingCartContext","useShoppingCartContext","getShopingCartStyle","listItemStyle","direction","ShoppingCart","onItemClick","activeItemIndex","setActiveItemIndex","clickItemHandle","ShoppingCartItem","isActive","itemStyle","backgroundColor","ShoppingCartExpandableItemStyles","shoppingCartItem","label","labelActive","extendedDetails","borderTop","ShoppingCartExpandableItem","itemLabelStyle","ShoppingCartApp","StoragName","localStorage","getItem","typer","setItem","SafeStorageName","setName","storeName","CollateralsApp","RandomPage","Child","counter","setCounter","c","ChildMemo","handleIncrease","toLocaleString","handleDecrease","LifecycleApp1","GlobalContext","Child2","ChildMemo2","Component2","counters","addCounter","incCounter","decCounter","Component2Optmized","Component2Memo","Component2MemoView","LifecycleApp2","setCounters","counts","updateCounter","LifecyclePage","signupSchema","Yup","firstName","max","required","lastName","signupInitialValues","SignupForm","formik","useFormik","initialValues","validationSchema","onSubmit","values","alert","JSON","stringify","handleSubmit","htmlFor","errors","handleChange","onBlur","handleBlur","touched","MyTextInput","useField","field","meta","MyCheckbox","MySelect","signup2Schema","acceptedTerms","oneOf","jobType","signup2InitialValues","SignupForm2","friendsInitialValues","friends","InviteFriends","r","insert","remove","friend","index","b","ResultField","useFormikContext","textA","textB","setFieldValue","isCurrent","trim","fetchNewTextC","then","textC","disabled","Boolean","LinkedForm","useForm","setValues","setErrors","setTouched","validate","abortEarly","catch","yupValidation","inner","reduce","prev","curr","path","SignupFormSimple","FormContext","useFormField","MyTextInputSimple","MyCheckboxSimple","MySelectSimple","SignupForm2Simple","schema","Forms","dataFetchReducer","action","isLoading","isError","useDataApi","initialUrl","initialData","url","setUrl","useReducer","dispatch","didCancel","fetchData","axios","withDataFetching","WrappedComponent","WithDataFetching","setData","setIsLoading","setIsError","doFetch","displayName","SearchPanelTemplate","ArticlesPaneV1","hits","isEmpty","preventDefault","slice","item","rel","objectID","FetchBox","baseUrl","queryParams","Placeholder","Empty","get","params","ArticlesPaneV2","ArticlesPaneV3","ArticlesPaneV4","setQueryParams","FetchPage","promise","response","status","suspender","res","err","wrapPromise","fetch","json","Step1","Step2","Step3","DynamicComponentGeneration","setIndex","components","setComponents","canPrev","canNext","SpecificStep","randomColor","floor","Generated","color","comps","ListComponents","notification","quote","author","post","content","socialname","datetime","tags","tag","dateTime","toLocaleDateString","items","ListItemComponent","createElement","DynamicList","FormComponents","textarea","select","options","option","formMetadata","FormItemComponent","input","rest","DynamicForm","formValues","setFormValues","DynamicComponent","WindowPortal","forwardRef","height","onClose","cssFiles","containerRef","containerEl","document","externalWindow","open","forEach","file","newLinkEl","head","appendChild","body","onbeforeunload","close","ReactDOM","createPortal","initialEmails","subject","from","CSS_FILES","WindowSample","emails","setEmails","selectedIndex","setSelectedIndex","setDateTime","currentDate","currentEmail","setInterval","handleClose","toLocaleTimeString","focus","isRead","handleSelect","Portal","container","Modal","hiddenBackground","ModalSample","isOpen","setOpen","Notification","position","duration","top","bottom","timeId","NotificationSample","show","hide","useNotification","ActionBar","active","setActive","role","CoolPortal","targe","experiments","iconClass","description","sort","Navbar","toggleMenu","to","src","logo","alt","tabIndex","onKeyPress","exp","ExperimentCard","subtitle","Home","Sidebar","isHome","useLocation","pathname","undefined","Layout","location","displayLocation","setDisplayLocation","transitionStage","setTransistionStage","onAnimationEnd","App","basename","process","element","Fetch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","entry","reportFID","reportLCP","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b3e0044.chunk.js","sourcesContent":["import propTypes from 'prop-types';\nimport { useLayoutEffect, useRef } from 'react';\n\nconst Code = ({ children, lang }) => {\n  const ref = useRef();\n  useLayoutEffect(() => {\n    if (ref.current && window.hljs) {\n      window.hljs.highlightElement(ref.current);\n    }\n  }, [ref]);\n\n  return (\n    <pre>\n      <code ref={ref} className={`language-${lang}`}>\n        {children}\n      </code>\n    </pre>\n  );\n};\n\nCode.propTypes = {\n  children: propTypes.oneOf([propTypes.element, propTypes.string]),\n  lang: propTypes.string,\n};\n\nCode.defaultProps = {\n  children: null,\n  lang: 'javascript',\n};\n\nexport default Code;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './ErrorBoudary.css';\nimport Code from '../../components/code';\n\nconst promiseTimeout = (callback, timeout) => new Promise((resolve, reject) => {\n  setTimeout((args) => {\n    try {\n      const result = callback(args);\n      resolve(result);\n    } catch (e) {\n      reject(e);\n    }\n  }, timeout);\n});\n\nconst useSecureCallback = (callback, deps) => {\n  const [error, setError] = useState(null);\n  const fn = useCallback(async (args) => {\n    try {\n      await callback(args);\n    } catch (e) {\n      setError(e);\n    }\n  }, deps);\n\n  if (error) {\n    throw error;\n  }\n\n  return fn;\n};\n\nconst useSecureEffect = (callback, deps) => {\n  const [error, setError] = useState(null);\n  useEffect((args) => {\n    try {\n      return callback(args);\n    } catch (e) {\n      setError(e);\n      return undefined;\n    }\n  }, deps);\n\n  if (error) {\n    throw error;\n  }\n};\n\nconst ErrorFallback = React.memo(({ error, errorInfo }) => (\n  <div className=\"notification is-danger is-light\">\n    <h2 className=\"title is-5\">Something went wrong.</h2>\n    <details style={{ whiteSpace: 'pre-wrap' }}>\n      {error && error.toString()}\n      <br />\n      {errorInfo.componentStack}\n    </details>\n  </div>\n));\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      const FallbackElement = this.props.fallback;\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      return <FallbackElement {...this.state} />;\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  fallback: PropTypes.element,\n};\n\nErrorBoundary.defaultProps = {\n  fallback: ErrorFallback,\n};\n\nconst withErrorBoundary = (WrappedComponent, { fallback } = {}) => ({ ...props }) => (\n  <ErrorBoundary fallback={fallback}>\n    {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n    <WrappedComponent {...props} />\n  </ErrorBoundary>\n);\n\nconst RenderErrorButton = ({ children, id }) => {\n  const [hasError, setHasError] = useState(false);\n  const clickHandle = () => {\n    setHasError(true);\n  };\n\n  if (hasError) {\n    throw new Error(`Error for: ${id}`);\n  }\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n\nconst AsyncRenderErrorButton = ({ children, id, delay }) => {\n  const [hasError, setHasError] = useState(false);\n  const clickHandle = () => {\n    setTimeout(() => {\n      setHasError(true);\n    }, delay || 1000);\n  };\n\n  if (hasError) {\n    throw new Error(`Error for: ${id}`);\n  }\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n\nconst AsyncUncatchErrorButton = ({ children, id }) => {\n  const clickHandle = () => {\n    setTimeout(() => {\n      throw new Error(`Error for: ${id}`);\n    }, 2000);\n  };\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n\nconst UncatchErrorButton = ({ children, id }) => {\n  const clickHandle = () => {\n    throw new Error(`Error for: ${id}`);\n  };\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n\nconst SecureUncatchErrorBox = ({ children, text }) => {\n  useSecureEffect(() => {\n    throw new Error(`Error for: ${text}`);\n  }, []);\n\n  return (\n    <div>{text}</div>\n  );\n};\n\nconst SecureUncatchErrorButton = ({ children, id }) => {\n  const clickHandle = useSecureCallback(() => {\n    throw new Error(`Error for: ${id}`);\n  }, []);\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n\nconst SecureUncatchAsyncErrorButton = ({ children, id }) => {\n  const clickHandle = useSecureCallback(async () => {\n    await promiseTimeout(() => {\n      throw new Error(`Error for: ${id}`);\n    }, 500);\n  }, []);\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n\nconst CustomFallback = () => <div className=\"notification is-warning\">Componente fallback personalizado para erros dentro do ErrorBoundary</div>;\nconst ErrorBoudaryPage = () => {\n  const [showError, setShowError] = useState(false);\n  return (\n    <div className=\"content\">\n      <h1 className=\"subtitle is-1\">Error Boundary</h1>\n      <hr />\n      <p>\n        Nesta página temos varios testes do uso de <strong>ErrorBoundary</strong> na prática,\n        para mais detalhes pode conferir a <a href=\"https://reactjs.org/docs/error-boundaries.html\">documentação oficial</a>.\n      </p>\n      <p>\n        Para todos os exemplos nesta página vamos usar um ErrorBoundary implementado exatamente\n        da forma como é descrita na documentação oficial, apenas testando seu funcionamento em\n        situações adversas. <br />Dito isso para nossso primeiro experimento criamos um botão\n        que ao ser clicado dispare um erro de renderização para que possamos conferir o\n        comportamento do ErrorBoundary.\n      </p>\n      <p>\n        <strong>OBS.</strong> rodando o projeto local uma mensagem de error cobrirá toda a tela,\n        porém ela pode ser fechada para conferir o comportamento do ErrorBoundary em produção\n      </p>\n      <Code>{`const RenderErrorButton = ({ children, id }) => {\n  const [hasError, setHasError] = useState(false);\n  const clickHandle = () => {\n    setHasError(true);\n  };\n\n  if (hasError) {\n    throw new Error(\\`Error for: \\${id}\\`);\n  }\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n// Exemplo de uso\n<ErrorBoundary fallback={CustomFallback}>\n  <RenderErrorButton id=\"1\">Click to error</RenderErrorButton>\n  <RenderErrorButton id=\"2\">Click to error</RenderErrorButton>\n</ErrorBoundary>`}\n      </Code>\n      <div className=\"mb-4\">\n        <ErrorBoundary fallback={CustomFallback}>\n          <RenderErrorButton id=\"1\">Dispare um erro</RenderErrorButton>\n          <RenderErrorButton id=\"2\">Dispare outro erro</RenderErrorButton>\n        </ErrorBoundary>\n      </div>\n      <p>\n        Para nosso segundo experimento teremos dois botões cada um seu próprio ErrorBoundary,\n        ao serem clicados eles também disparam erros de renderização, como no primeiro exemplo\n        porém com um delay, esse erro ocorrerá apenas após um setTimeout.\n      </p>\n      <Code>{`const AsyncRenderErrorButton = ({ children, id }) => {\n  const [hasError, setHasError] = useState(false);\n  const clickHandle = () => {\n    setTimeout(() => {\n      setHasError(true);\n    }, 1000);\n  };\n\n  if (hasError) {\n    throw new Error(\\`Error for: \\${id}\\`);\n  }\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n// Exemplo de uso\n<ErrorBoundary>\n  <AsyncRenderErrorButton id=\"3\">Click to async error</AsyncRenderErrorButton>\n</ErrorBoundary>\n<ErrorBoundary>\n  <AsyncRenderErrorButton id=\"4\">Click to async error</AsyncRenderErrorButton>\n</ErrorBoundary>`}\n      </Code>\n      <div className=\"mb-4\">\n        <ErrorBoundary>\n          <AsyncRenderErrorButton id=\"3\">Dispare erro em 1s</AsyncRenderErrorButton>\n        </ErrorBoundary>\n        <ErrorBoundary>\n          <AsyncRenderErrorButton id=\"4\" delay={2000}>Dispare erro em 2s</AsyncRenderErrorButton>\n        </ErrorBoundary>\n      </div>\n\n      <p>\n        Para nosso terceiro experimento implementamos situações em que o ErrorBoundary\n        não consegue pegar os erros, o primeiro é um botão que dispare um erro de\n        evento diretamente no evento de clique e o outro é um erro disparado dentro de\n        um setTimeout. <br />\n        <strong>OBS.</strong> Apesar dos exemplos aqui implementados usando o evento de click,\n        as mesmas regras se aplicam para eventos do lifecycle do React como dentro de um useEffect\n        ou useLayoutEffect\n      </p>\n      <Code>{`const UncatchErrorButton = ({ children, id }) => {\n  const clickHandle = () => {\n    throw new Error(\\`Error for: \\${id}\\`);\n  };\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n// Exemplo de uso\n<ErrorBoundary>\n  <UncatchErrorButton id=\"5\">Click to thoew an error</UncatchErrorButton>\n</ErrorBoundary>`}\n      </Code>\n      <div className=\"mb-4\">\n        <ErrorBoundary>\n          <UncatchErrorButton id=\"5\">Clique para disparar um erro de evento</UncatchErrorButton>\n        </ErrorBoundary>\n      </div>\n      <Code>{`const AsyncUncatchErrorButton = ({ children, id }) => {\n  const clickHandle = () => {\n    setTimeout(() => {\n      throw new Error(\\`Error for: \\${id}\\`);\n    }, 2000);\n  };\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n// Exemplo de uso\n<ErrorBoundary>\n  <UncatchErrorBox id=\"5\">Click to thoew an error</UncatchErrorBox>\n</ErrorBoundary>`}\n      </Code>\n      <div className=\"mb-4\">\n        <ErrorBoundary>\n          <AsyncUncatchErrorButton id=\"6\">Clique para disparar um erro em 1s</AsyncUncatchErrorButton>\n        </ErrorBoundary>\n      </div>\n      <p>\n        Com isso concluimos que para tratar erros de eventos é necessário o uso de try/catch.\n        Isso nos leva a dois problemas, repetição nos blocos de código para tratamento de erro\n        em multiplas funções e a descentralização do contole de erros, tendo os erros de\n        renderização tratados no ErrorBoundary e os erros de eventos tratados manualmente.\n      </p>\n      <p>\n        Para solucionar estes problemas alguns simples hooks podem evitar a repetição de código\n        e converter os erros de evento em erros de renderização, assim centralizando o tratamento\n        de erros apenas nos ErrorBoundary.\n      </p>\n      <Code>\n        {`// Replace the react hook useCallback\n  const useSecureCallback = (callback, deps) => {\n  const [error, setError] = useState(null);\n  const fn = useCallback(async (args) => {\n    try {\n      await callback(args);\n    } catch (e) {\n      setError(e);\n    }\n  }, deps);\n\n  if (error) {\n    // Dispara um erro de renderizão para ser tratado pelo ErrorBoundary\n    throw error;\n  }\n\n  return fn;\n};\n\n// Replace the react hook useEffect\nconst useSecureEffect = (callback, deps) => {\n  const [error, setError] = useState(null);\n  useEffect((args) => {\n    try {\n      return callback(args);\n    } catch (e) {\n      setError(e);\n      return undefined;\n    }\n  }, deps);\n\n  if (error) {\n    // Dispara um erro de renderizão para ser tratado pelo ErrorBoundary\n    throw error;\n  }\n};\n// Exemplos de erro tratado pelo ErrorBoundary\nconst SecureUncatchErrorButton = ({ children }) => {\n  const clickHandle = useSecureCallback(() => {\n    throw new Error('Unexpected Error');\n  }, []);\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};\n// Exemplos de erro não tratado\nconst SecureUncatchErrorButton = ({ children }) => {\n  const clickHandle = useCallback(() => {\n    throw new Error('Unexpected Error');\n  }, []);\n\n  return (\n    <button className=\"button is-danger mr-2\" type=\"button\" onClick={clickHandle}>{children}</button>\n  );\n};`}\n      </Code>\n      <ErrorBoundary>\n        <SecureUncatchErrorButton id=\"7\">Disparar erro de evento</SecureUncatchErrorButton>\n        <SecureUncatchAsyncErrorButton id=\"8\">Disparar erro depois de 1s</SecureUncatchAsyncErrorButton>\n      </ErrorBoundary>\n      <ErrorBoundary>\n        <button type=\"button\" className=\"button is-warning\" onClick={() => setShowError(true)}>\n          Disparar erro ao carregar um novo elemento\n        </button>\n        {showError && <SecureUncatchErrorBox text=\"Erro disparado dentro de um useSecureEffect\" />}\n      </ErrorBoundary>\n    </div>\n  );\n};\n\nErrorBoudaryPage.propTypes = {};\n\nErrorBoudaryPage.defaultProps = {};\n\nexport default ErrorBoudaryPage;\n","/* eslint-disable no-plusplus */\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  self.addEventListener('message', (e) => { // eslint-disable-line no-restricted-globals\n    if (!e) return;\n\n    const { names, query } = e.data;\n\n    let filteredNames = names;\n    if (query !== '') {\n      // eslint-disable-next-line max-len\n      filteredNames = names.filter((name) => name.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    postMessage(filteredNames);\n  });\n};\n","export default class WebWorker {\n  constructor(worker) {\n    const code = worker.toString();\n    const blob = new Blob([`(${code})()`]);\n    // eslint-disable-next-line no-constructor-return\n    return new Worker(URL.createObjectURL(blob));\n  }\n}\n","/**\n * For some ref read this article https://www.newline.co/fullstack-react/articles/introduction-to-web-workers-with-react/\n * See the samples working https://build-jrrpxladjd.now.sh/\n */\n\n/* eslint-disable react/prop-types */\nimport './Pooling.css';\nimport debounce from 'lodash/debounce';\nimport {\n  useEffect, useMemo, useRef, useState,\n  useCallback,\n} from 'react';\nimport workerFile from './worker';\nimport WebWorker from './workerSetup';\n\n// TODO: understand the benefits of hook instead of setInterval function\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef(null);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    const tick = async () => {\n      try {\n        await savedCallback.current();\n      } catch (e) {\n        // TODO: error threating\n        console.log(e);\n      }\n    };\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n\n    return undefined;\n  }, [delay]);\n};\n\nconst promiseTimeout = (callback, timeout) => new Promise((resolve, reject) => {\n  setTimeout((args) => {\n    try {\n      const result = callback(args);\n      resolve(result);\n    } catch (e) {\n      reject(e);\n    }\n  }, timeout);\n});\n\n// TODO: understand the benefits of hook instead of setTimeout function\nconst useTimeout = (callback, delay) => {\n  const savedCallback = useRef(null);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    const tick = async () => {\n      try {\n        await savedCallback.current();\n      } catch (e) {\n        // TODO: error threating\n        console.log(e);\n      }\n    };\n    if (delay !== null) {\n      const id = setTimeout(tick, delay);\n      return () => clearInterval(id);\n    }\n\n    return undefined;\n  }, [delay]);\n};\n\nconst useSafeTimeout = () => {\n  const mounted = useRef(true);\n  const timer = useRef(null);\n  const setTimeout = useCallback((callback, delay) => new Promise((resolve, reject) => {\n    timer.current = window.setTimeout((args) => {\n      if (!mounted?.current) return;\n      try {\n        const result = callback(args);\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    }, delay);\n  }), []);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    // TODO: I really need this ref to find out if component is dismounted\n    return () => {\n      mounted.current = false;\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return setTimeout;\n};\n\nconst usePooling = (callback, interval) => {\n  const [lastExecution, setLastExecution] = useState(null);\n\n  useEffect(() => {\n    // TODO: an local variabel is really the best way to find out if component is dismounted\n    let isDismounted = false;\n    const delay = lastExecution ? Date.now() - lastExecution : 0;\n    const timer = setTimeout(async () => {\n      if (isDismounted) return;\n      setLastExecution(Date.now());\n      try {\n        await callback();\n      } catch (e) {\n        console.log(e);\n      }\n    }, interval - delay);\n    return () => {\n      isDismounted = true;\n      clearTimeout(timer);\n    };\n  }, [lastExecution, interval, callback]);\n};\n\n// TODO: write unite test for pooling with async\n// TODO: Can useTimeout be used here? I really need an promiseTimeout?\nconst INTERVAL = 2000;\nconst PoolingNumber = () => {\n  const [number, setNumber] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const firstLoading = loading && number === null;\n  const setTimeout = useSafeTimeout();\n  usePooling(async () => {\n    setLoading(true);\n    await setTimeout(() => {\n      setNumber(Date.now());\n      setLoading(false);\n    }, Math.random() * INTERVAL);\n  }, INTERVAL);\n\n  return firstLoading ? <div>loading...</div> : <div>Current: {number}</div>;\n};\n\nlet renderCount = 0;\nconst FilterList = ({ names }) => {\n  const [query, setQuery] = useState('');\n  let filteredNames = names;\n  if (query !== '') {\n    filteredNames = names.filter((name) => name.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  const debouncedChangeHandler = useMemo(\n    () => debounce((event) => {\n      setQuery(event.target.value);\n    }, 300),\n    [],\n  );\n\n  useEffect(() => () => {\n    debouncedChangeHandler.cancel();\n  }, []);\n\n  // eslint-disable-next-line no-plusplus\n  console.log('Render', ++renderCount);\n  return (\n    <div>\n      <input\n        onChange={debouncedChangeHandler}\n        type=\"text\"\n        placeholder=\"Type a query...\"\n      />\n      {filteredNames.map((name) => <div key={name}>{name}</div>)}\n    </div>\n  );\n};\n\nconst AsyncFilterList = ({ }) => {\n  const [names, setNames] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const debouncedChangeHandler = useMemo(\n    () => debounce((event) => {\n      setQuery(event.target.value);\n    }, 300),\n    [],\n  );\n\n  useEffect(() => () => {\n    debouncedChangeHandler.cancel();\n  }, []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      let filteredNames = LIST_NAMES;\n      if (query !== '') {\n        // eslint-disable-next-line max-len\n        filteredNames = LIST_NAMES.filter((name) => name.toLowerCase().includes(query.toLowerCase()));\n      }\n      setNames(filteredNames);\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [query]);\n\n  // eslint-disable-next-line no-plusplus\n  console.log('Render', ++renderCount);\n  return (\n    <div>\n      <input\n        onChange={debouncedChangeHandler}\n        type=\"text\"\n        placeholder=\"Type a query...\"\n      />\n      {names.map((name) => <div key={name}>{name}</div>)}\n    </div>\n  );\n};\n\nconst WebWorkerFilterList = ({ }) => {\n  const worker = useRef(null);\n  const [names, setNames] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const debouncedChangeHandler = useMemo(\n    () => debounce((event) => {\n      setQuery(event.target.value);\n    }, 300),\n    [],\n  );\n\n  useEffect(() => () => {\n    debouncedChangeHandler.cancel();\n  }, []);\n\n  const fetchWebWorker = () => {\n    worker.current.postMessage({ names: LIST_NAMES, query });\n\n    worker.current.addEventListener('message', (event) => {\n      console.log(event);\n    });\n  };\n\n  useEffect(() => {\n    worker.current = new WebWorker(workerFile);\n    return () => worker.current.terminate();\n  }, []);\n\n  useEffect(() => {\n    worker.current.postMessage({ names: LIST_NAMES, query });\n\n    worker.current.addEventListener('message', (event) => {\n      setNames(event.data);\n    });\n  }, [query]);\n\n  // eslint-disable-next-line no-plusplus\n  console.log('Render', ++renderCount);\n  return (\n    <div>\n      <input\n        onChange={debouncedChangeHandler}\n        type=\"text\"\n        placeholder=\"Type a query...\"\n      />\n      {names.map((name) => <div key={name}>{name}</div>)}\n    </div>\n  );\n};\n\nconst LIST_NAMES = ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Federated States of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n\nconst Pooling = () => (\n  <div className=\"content\" data-testid=\"Pooling\">\n    <h1 className=\"subtitle is-1\">[WIP] Pooling</h1>\n    <hr />\n    <PoolingNumber />\n    <WebWorkerFilterList names={LIST_NAMES} />\n  </div>\n);\n\nPooling.propTypes = {};\n\nPooling.defaultProps = {};\n\nexport default Pooling;\n","/* eslint-disable no-plusplus */\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  self.addEventListener('message', (e) => { // eslint-disable-line no-restricted-globals\n    if (!e) return;\n\n    const users = [];\n\n    const userDetails = {\n      name: 'Jane Doe',\n      email: 'jane.doe@gmail.com',\n      id: 1,\n    };\n\n    for (let i = 0; i < 10000000; i++) {\n      userDetails.id = i++;\n      userDetails.dateJoined = Date.now();\n\n      users.push(userDetails);\n    }\n\n    postMessage(users);\n  });\n};\n","export default class WebWorker {\n  constructor(worker) {\n    const code = worker.toString();\n    const blob = new Blob([`(${code})()`]);\n    // eslint-disable-next-line no-constructor-return\n    return new Worker(URL.createObjectURL(blob));\n  }\n}\n","import './WebWorker.css';\nimport {\n  useEffect, useRef, useState,\n} from 'react';\nimport workerFile from './worker';\nimport WebWorker from './workerSetup';\n\nconst LocalCounter = () => {\n  const [count, setCount] = useState(0);\n  const [time, setTime] = useState(0);\n\n  const fetchUsers = () => {\n    const users = [];\n    const start = Date.now();\n\n    const userDetails = {\n      name: 'Jane Doe',\n      email: 'jane.doe@gmail.com',\n      id: 1,\n    };\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < 10000000; i++) {\n      // eslint-disable-next-line no-plusplus\n      userDetails.id = i++;\n      userDetails.dateJoined = Date.now();\n\n      users.push(userDetails);\n    }\n\n    setCount(users.length);\n    setTime(Date.now() - start);\n  };\n\n  return (\n    <section className=\"App-right\">\n      <p className=\"text-center\">Total User Count: {count}</p>\n      <p className=\"text-center\">Total Time Spent: {time}</p>\n      <button type=\"button\" className=\"btn-worker\" onClick={fetchUsers}>Fetch Users directly</button>\n    </section>\n  );\n};\n\nconst WebWorkerCounter = () => {\n  const worker = useRef(null);\n  const [count, setCount] = useState(0);\n  const [time, setTime] = useState(0);\n\n  const fetchWebWorker = () => {\n    const start = Date.now();\n    worker.current.postMessage('Fetch Users');\n\n    worker.current.addEventListener('message', (event) => {\n      setCount(event.data.length);\n      setTime(Date.now() - start);\n    });\n  };\n\n  useEffect(() => {\n    worker.current = new WebWorker(workerFile);\n  }, []);\n\n  return (\n    <section className=\"App-right\">\n      <p className=\"text-center\">Total User Count: {count}</p>\n      <p className=\"text-center\">Total Time Spent: {time}</p>\n      <button type=\"button\" className=\"btn-worker\" onClick={fetchWebWorker}>Fetch Users with Web Worker</button>\n    </section>\n  );\n};\n\nconst WebWorkerPage = () => (\n  <div className=\"root\" data-testid=\"WebWorker\">\n    <h1 className=\"subtitle is-1\">[WIP] WebWorker</h1>\n    <hr />\n    <LocalCounter />\n    <WebWorkerCounter />\n  </div>\n);\n\nWebWorkerPage.propTypes = {};\n\nWebWorkerPage.defaultProps = {};\n\nexport default WebWorkerPage;\n","/* eslint-disable max-len */\n/* eslint-disable react/prop-types */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport './Random.css';\n\nconst ToggleContext = React.createContext();\n\nfunction useToggleContext() {\n  const context = React.useContext(ToggleContext);\n  if (!context) {\n    throw new Error(\n      'Toggle compound components cannot be rendered outside the Toggle component',\n    );\n  }\n  return context;\n}\n\nconst Switch = ({ on = false, onClick, children }) => (\n  // eslint-disable-next-line jsx-a11y/label-has-associated-control\n  <label>\n    <input type=\"checkbox\" checked={on} onChange={onClick} /> {children}\n  </label>\n);\n\nconst On = ({ children }) => {\n  const { on } = useToggleContext();\n  return on ? children : null;\n};\n\nconst Off = ({ children }) => {\n  const { on } = useToggleContext();\n  return on ? null : children;\n};\n\nconst Button = (props) => {\n  const { on, toggle } = useToggleContext();\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Switch on={on} onClick={toggle} {...props} />;\n};\n\nconst Toggle = ({ children, onToggle }) => {\n  const [on, setOn] = useState(false);\n  const toggle = useCallback(() => setOn((oldOn) => !oldOn), []);\n  useEffect(() => {\n    onToggle(on);\n  }, [on]);\n  const value = useMemo(() => ({ on, toggle }), [on]);\n  return (\n    <ToggleContext.Provider value={value}>\n      {children}\n    </ToggleContext.Provider>\n  );\n};\n\n// for convenience, but totally not required...\nToggle.On = On;\nToggle.Off = Off;\nToggle.Button = Button;\n\nconst ToogleApp = () => (\n  <Toggle onToggle={(on) => console.log(on)}>\n    <Toggle.On>The button is on</Toggle.On>\n    <Toggle.Off>The button is off</Toggle.Off>\n    <Toggle.Button>checkbox</Toggle.Button>\n  </Toggle>\n);\n\nconst Slide = ({ children, title }) => (\n  title ? (\n    <div id={`slide-${title}`}>\n      {children}\n    </div>\n  ) : null\n);\n\nconst Slider = ({ navigator = (props) => <a key={props.title} href={`#slide-${props.title}`}>{props.title}</a>, children }) => (\n  <div className=\"slider\">\n    {React.Children.map(children, ({ props }) => (props.title ? navigator(props) : null))}\n\n    <div className=\"slides\">\n      {children}\n    </div>\n  </div>\n);\n\nSlider.Slide = Slide;\n\nconst SliderApp = () => {\n  const renderNavigator = useCallback(({ title }) => <><a key={title} href={`#slide-${title}`}>{title}</a> /</>, []);\n  return (\n    <Slider navigator={renderNavigator}>\n      <Slider.Slide title=\"1\">A</Slider.Slide>\n      <Slider.Slide title=\"2\">B</Slider.Slide>\n      <Slider.Slide>C</Slider.Slide>\n      <Slider.Slide title=\"4\">D</Slider.Slide>\n      <Slider.Slide title=\"5\">E</Slider.Slide>\n    </Slider>\n  );\n};\n\nconst styles = {\n  shoppingCartList: {\n    display: 'inline-flex',\n    listStyle: 'none',\n    padding: '0px',\n    border: '1px solid black',\n  },\n  verticalList: {\n    flexWrap: 'wrap',\n    borderBottom: '0px',\n  },\n  horizontalList: {\n    flexWrap: 'nowrap',\n    borderRight: '0px',\n  },\n  shoppingCartListItem: {\n    cursor: 'pointer',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    minWidth: '100px',\n    width: '100%',\n  },\n  verticalListItem: {\n    borderBottom: '1px solid black',\n  },\n  horizontalListItem: {\n    borderRight: '1px solid black',\n  },\n};\n\nconst ShoppingCartContext = React.createContext();\n\nfunction useShoppingCartContext() {\n  const context = React.useContext(ShoppingCartContext);\n  if (!context) {\n    throw new Error(\n      'Toggle compound components cannot be rendered outside the Toggle component',\n    );\n  }\n  return context;\n}\n\nconst getShopingCartStyle = ({ direction }) => {\n  let listStyle;\n  let listItemStyle;\n\n  switch (direction) {\n    case 'vertical':\n      listStyle = { ...styles.shoppingCartList, ...styles.verticalList };\n      listItemStyle = { ...styles.shoppingCartListItem, ...styles.verticalListItem };\n      break;\n    case 'horizontal':\n      listStyle = { ...styles.shoppingCartList, ...styles.horizontalList };\n      listItemStyle = { ...styles.shoppingCartListItem, ...styles.horizontalListItem };\n      break;\n    default:\n      listStyle = styles.shoppingCartList;\n      listItemStyle = styles.shoppingCartListItem;\n  }\n\n  return { listStyle, listItemStyle };\n};\n\nconst ShoppingCart = ({ children, direction = 'vertical', onItemClick = () => null }) => {\n  const [activeItemIndex, setActiveItemIndex] = useState(0);\n  const { listStyle } = getShopingCartStyle({ direction });\n\n  const clickItemHandle = useCallback((id) => {\n    setActiveItemIndex(id);\n    onItemClick(id);\n  }, [onItemClick]);\n\n  const value = useMemo(\n    () => ({\n      direction, activeItemIndex, onItemClick: clickItemHandle,\n    }),\n    [direction, activeItemIndex, clickItemHandle],\n  );\n  return (\n    <ShoppingCartContext.Provider value={value}>\n      <ul aria-orientation={direction} style={listStyle}>\n        active: {activeItemIndex}\n        {children}\n      </ul>\n    </ShoppingCartContext.Provider>\n  );\n};\n\nconst shoppingCartItemStyles = {\n  shoppingCartItem: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%',\n    padding: '10px',\n  },\n  shoppingCartItemActive: {\n    backgroundColor: 'grey',\n  },\n};\n\nconst ShoppingCartItem = ({ children, id }) => {\n  const {\n    direction, activeItemIndex, onItemClick,\n  } = useShoppingCartContext();\n  const { listItemStyle } = getShopingCartStyle({ direction });\n  const isActive = activeItemIndex === id;\n\n  const itemStyle = isActive ? ({\n    ...listItemStyle,\n    backgroundColor: 'grey',\n  }) : (\n    listItemStyle\n  );\n\n  return (\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    <div\n      style={itemStyle}\n      onClick={() => onItemClick(id)}\n    >\n      {children} {isActive.toString()}\n    </div>\n  );\n};\n\nconst ShoppingCartExpandableItemStyles = {\n  shoppingCartItem: {\n    width: '100%',\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '10px',\n  },\n  labelActive: {\n    backgroundColor: 'grey',\n  },\n  extendedDetails: {\n    padding: '10px',\n    borderTop: '1px solid grey',\n  },\n};\n\nconst ShoppingCartExpandableItem = ({ children, extendedDetails, id = Date.now() }) => {\n  const { direction, activeItemIndex, onItemClick } = useShoppingCartContext();\n  const { listItemStyle } = getShopingCartStyle({ direction });\n  const isActive = activeItemIndex === id;\n\n  const itemStyle = isActive ? ({\n    ...listItemStyle,\n    backgroundColor: 'grey',\n  }) : (\n    listItemStyle\n  );\n\n  const itemLabelStyle = isActive ? ({\n    ...ShoppingCartExpandableItemStyles.label,\n    ...ShoppingCartExpandableItemStyles.labelActive,\n  }) : (\n    ShoppingCartExpandableItemStyles.label\n  );\n\n  return (\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    <div\n      style={ShoppingCartExpandableItemStyles.shoppingCartItem}\n      onClick={() => onItemClick(id)}\n    >\n      <div style={itemLabelStyle}>\n        {children}\n      </div>\n      {isActive && (\n        <div style={ShoppingCartExpandableItemStyles.extendedDetails}>\n          - {extendedDetails}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ShoppingCartApp = () => (\n  <ShoppingCart direction=\"vertical\">\n    <ShoppingCartItem id={1}>Eggs</ShoppingCartItem>\n    <ShoppingCartItem id={2}>Ham</ShoppingCartItem>\n    <ShoppingCartExpandableItem id={3} extendedDetails=\"Details to show when clicked\">\n      Bread\n    </ShoppingCartExpandableItem>\n  </ShoppingCart>\n);\n\nconst StoragName = () => {\n  const name = localStorage.getItem('name');\n  const updateName = (e) => localStorage.setItem('name', e.target.value);\n  return (\n    <>\n      <h1>{name}</h1>\n      <input typer=\"text\" value={name} onChange={updateName} />\n    </>\n  );\n};\n\nconst SafeStorageName = () => {\n  const [name, setName] = useState('');\n  const updateName = (e) => setName(e.target.value);\n\n  useEffect(() => {\n    const storeName = localStorage.getItem('safe-name');\n    if (storeName) {\n      setName(storeName);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('safe-name', name);\n  }, [name]);\n\n  return (\n    <>\n      <h1>{name}</h1>\n      <input typer=\"text\" value={name} onChange={updateName} />\n    </>\n  );\n};\n\nconst CollateralsApp = () => (\n  <>\n    <h1>Collaterals</h1>\n    <StoragName />\n    <SafeStorageName />\n  </>\n);\n\nconst RandomPage = () => (\n\n  <div className=\"content\">\n    <h1 className=\"subtitle is-1\">[WIP] Random</h1>\n    <hr />\n    <ToogleApp />\n    <SliderApp />\n    <ShoppingCartApp />\n    <CollateralsApp />\n  </div>\n);\n\nRandomPage.propTypes = {};\n\nRandomPage.defaultProps = {};\n\nexport default RandomPage;\n","/* eslint-disable no-plusplus */\n/* eslint-disable react/prop-types */\nimport React, {\n  useCallback, useContext, useMemo, useRef, useState, useEffect,\n} from 'react';\nimport './Lifecycle.css';\n\nconst Child = ({ text, onClick = () => null }) => {\n  const [counter, setCounter] = useState(0);\n  const handleClick = () => {\n    setCounter((c) => c + 1);\n    onClick();\n  };\n  return (\n    <button className=\"button is-primary is-light mr-4\" type=\"button\" onClick={handleClick}>{text} {counter}</button>\n  );\n};\n\nconst ChildMemo = React.memo(({ text, onClick = () => null }) => {\n  const [counter, setCounter] = useState(0);\n  const handleClick = () => {\n    setCounter((c) => c + 1);\n    onClick();\n  };\n  return (\n    <button className=\"button is-primary is-light mr-4\" type=\"button\" onClick={handleClick}>{text} {counter}</button>\n  );\n});\n\nconst Component = ({ name }) => {\n  const [counter, setCounter] = useState(0);\n  const [time, setTime] = useState('');\n  const handleIncrease = useCallback(() => {\n    setCounter((c) => c + 1);\n    setCounter((c) => c + 1);\n    setCounter((c) => c + 1);\n    setTime(new Date().toLocaleString());\n  }, []);\n  const handleDecrease = () => {\n    setCounter((c) => c - 1);\n    setCounter((c) => c - 1);\n    setCounter((c) => c - 1);\n    setTime(new Date().toLocaleString());\n  };\n\n  return (\n    <div className=\"columns is-multiline\">\n      <div className=\"column is-12\">\n        <h4 className=\"subtitle is-6\">{name}: {counter} (atualizado em {time})</h4>\n        <p>\n          Ao clicar nos botões em azul pode será gerado um novo render deste Componente Pai\n          assim como seu componentes filhos que não estão memoizados da forma correta, mesmo\n          que eles não usem o valor do contador do Componente Pai e não teriam a\n          necessidade de sofrer um novo render\n        </p>\n        <button className=\"button is-link is-light mr-4\" type=\"button\" onClick={handleIncrease}>+</button>\n        <button className=\"button is-link is-light mr-4\" type=\"button\" onClick={handleDecrease}>-</button>\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Ao clicar nos botões abaixo pode conferir não ocorrerá o render do outro botão nem do\n          Componente Pai, porém ao clicar nos botões em azul o botão memoizado não sofre um\n          render desncessário.\n        </p>\n        <Child text={`Botão 1 - ${name}`} />\n        <ChildMemo text={`Botão 1 com Memo - ${name}`} />\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Os botões abaixo atualizam o contador do Componente Pai e assim causam um novo render\n          nele e em todos seus componentes filhos sem memoização.\n        </p>\n        <Child text={`Botão 2 - ${name}`} onClick={handleIncrease} />\n        <ChildMemo text={`Botão 2 com Memo - ${name}`} onClick={handleIncrease} />\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Neste terceiro cenario nosso botão memoizado esta sofrendo o render sempre que o\n          componente pai renderiza e isso ocorre pq apesar de memoizado sua prop <i>onClick</i> é\n          uma função não memoizada com o useCallback e com isso ela será recriada a\n          cada render fazendo com que o boptão entenda que é uma nova função e seja re-renderizada.\n        </p>\n        <Child text={`Botão 3 - ${name}`} onClick={handleDecrease} />\n        <ChildMemo text={`Botão 3 com Memo - ${name}`} onClick={handleDecrease} />\n      </div>\n    </div>\n  );\n};\n\nconst LifecycleApp1 = () => (\n  <div className=\"box\">\n    <h3 className=\"title is-4\">Componente Pai</h3>\n    <Component name=\"Componente Filho\" />\n  </div>\n);\n\nconst GlobalContext = React.createContext();\n\nconst Child2 = ({ text, onClick = () => null }) => {\n  const [counter, setCounter] = useState(0);\n  const handleClick = () => {\n    setCounter((c) => c + 1);\n    onClick();\n  };\n  console.log(`render child ${text}`);\n  return (\n    <button className=\"button is-primary is-light mr-4\" type=\"button\" onClick={handleClick}>{text} {counter}</button>\n  );\n};\n\nconst ChildMemo2 = React.memo(({ text, onClick = () => null }) => {\n  const [counter, setCounter] = useState(0);\n  const handleClick = () => {\n    setCounter((c) => c + 1);\n    onClick();\n  };\n  console.log(`render child ${text}`);\n  return (\n    <button className=\"button is-primary is-light mr-4\" type=\"button\" onClick={handleClick}>{text} {counter}</button>\n  );\n});\n\nconst Component2 = ({ name }) => {\n  const {\n    counters, addCounter, incCounter, decCounter,\n  } = useContext(GlobalContext);\n  const { time, value: counter } = counters[name] || {};\n\n  const handleIncrease = useCallback(() => {\n    incCounter(name);\n  }, [incCounter, name]);\n\n  const handleDecrease = useCallback(() => {\n    decCounter(name);\n  }, [decCounter, name]);\n\n  useEffect(() => {\n    addCounter(name);\n  }, [addCounter, name]);\n\n  return (\n    <div className=\"columns is-multiline\">\n      <div className=\"column is-12\">\n        <h4 className=\"subtitle is-6\">{name}: {counter} (atualizado em {time})</h4>\n        <p>\n          Ao clicar nos botões em azul pode será gerado um novo render deste Componente Pai\n          assim como seu coponentes filhos que não estão memoizados da forma correta, mesmo\n          que eles não usem o valor do contador do Componente Pai e não teriam a\n          necessidade de sofrer um novo render\n        </p>\n        <button className=\"button is-link is-light mr-4\" type=\"button\" onClick={handleIncrease}>+</button>\n        <button className=\"button is-link is-light mr-4\" type=\"button\" onClick={handleDecrease}>-</button>\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Ao clicar nos botões abaixo pode conferir sua independência, não causando render um\n          ao outro ou no Componente Pai. Porém ao clicar nos botões em azul pdoe conferir que\n          o botão memoizado não sofre um render desncessário enquanto o outro renderzida novamente.\n        </p>\n        <Child text={`Botão 1 - ${name}`} />\n        <ChildMemo text={`Botão 1 com Memo - ${name}`} />\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Os botões abaixo atualizam o contador do Componente Pai e assim causam um novo render\n          nele e em todos seus componentes filhos sem memoização. Este exemplo torna evidente\n          como o não uso ou mal uso da memoização podem causar renders inesperados.\n        </p>\n        <Child text={`Botão 2 - ${name}`} onClick={handleIncrease} />\n        <ChildMemo text={`Botão 2 com Memo - ${name}`} onClick={handleIncrease} />\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Neste terceiro cenario nosso botão memoizado esta sofrendo o render sempre que o\n          componente pai renderiza e isso ocorre pq apesar de memoizado sua prop onClick é\n          uma função não memoizada com o useCallback e isso faz com que ela seja recriada\n          a cada render causando um novo render no botão memoizado que entende que houveram\n          atualizações.\n        </p>\n        <Child text={`Botão 3 - ${name}`} onClick={handleDecrease} />\n        <ChildMemo text={`Botão 3 com Memo - ${name}`} onClick={handleDecrease} />\n      </div>\n    </div>\n  );\n};\n\nconst Component2Optmized = ({ name }) => {\n  const {\n    counters, addCounter, incCounter, decCounter,\n  } = useContext(GlobalContext);\n  const { time, value: counter } = counters[name] || {};\n\n  const handleIncrease = useCallback(() => {\n    incCounter(name);\n  }, [incCounter, name]);\n\n  const handleDecrease = useCallback(() => {\n    decCounter(name);\n  }, [decCounter, name]);\n\n  useEffect(() => {\n    addCounter(name);\n  }, [addCounter, name]);\n\n  // PREVENT from unnecessary reloads\n  return useMemo(() => (\n    <div className=\"columns is-multiline\">\n      <div className=\"column is-12\">\n        <h4 className=\"subtitle is-6\">{name}: {counter} (atualizado em {time})</h4>\n        <p>\n          Ao clicar nos botões em azul pode será gerado um novo render deste Componente Pai\n          assim como seu coponentes filhos que não estão memoizados da forma correta, mesmo\n          que eles não usem o valor do contador do Componente Pai e não teriam a\n          necessidade de sofrer um novo render\n        </p>\n        <button className=\"button is-link is-light mr-4\" type=\"button\" onClick={handleIncrease}>+</button>\n        <button className=\"button is-link is-light mr-4\" type=\"button\" onClick={handleDecrease}>-</button>\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Ao clicar nos botões abaixo pode conferir sua independência, não causando render um\n          ao outro ou no Componente Pai. Porém ao clicar nos botões em azul pdoe conferir que\n          o botão memoizado não sofre um render desncessário enquanto o outro renderzida novamente.\n        </p>\n        <Child text={`Botão 1 - ${name}`} />\n        <ChildMemo text={`Botão 1 com Memo - ${name}`} />\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Os botões abaixo atualizam o contador do Componente Pai e assim causam um novo render\n          nele e em todos seus componentes filhos sem memoização. Este exemplo torna evidente\n          como o não uso ou mal uso da memoização podem causar renders inesperados.\n        </p>\n        <Child text={`Botão 2 - ${name}`} onClick={handleIncrease} />\n        <ChildMemo text={`Botão 2 com Memo - ${name}`} onClick={handleIncrease} />\n      </div>\n      <div className=\"column is-12\">\n        <p>\n          Neste terceiro cenario nosso botão memoizado esta sofrendo o render sempre que o\n          componente pai renderiza e isso ocorre pq apesar de memoizado sua prop onClick é\n          uma função não memoizada com o useCallback e isso faz com que ela seja recriada\n          a cada render causando um novo render no botão memoizado que entende que houveram\n          atualizações.\n        </p>\n        <Child text={`Botão 3 - ${name}`} onClick={handleDecrease} />\n        <ChildMemo text={`Botão 3 com Memo - ${name}`} onClick={handleDecrease} />\n      </div>\n    </div>\n  ), [name, counter]);\n};\n\nconst Component2Memo = ({ name }) => {\n  const {\n    counters, addCounter, incCounter, decCounter,\n  } = useContext(GlobalContext);\n  const { time, value: counter } = counters[name] || {};\n\n  const handleIncrease = useCallback(() => {\n    incCounter(name);\n  }, [incCounter, name]);\n\n  const handleDecrease = useCallback(() => {\n    decCounter(name);\n  }, [decCounter, name]);\n\n  useEffect(() => {\n    addCounter(name);\n  }, [addCounter, name]);\n\n  // PREVENT from unnecessary reloads\n  return (\n    <Component2MemoView\n      counter={counter}\n      name={name}\n      time={time}\n      handleDecrease={handleDecrease}\n      handleIncrease={handleIncrease}\n    />\n  );\n};\n\nconst Component2MemoView = React.memo(({\n  name, counter, time, handleIncrease, handleDecrease,\n}) => (\n  <div>\n    <p>{name}: {counter} (updated at {time})</p>\n    <div>\n      <button className=\"button is-primary is-light mr-4\" type=\"button\" onClick={handleIncrease}>+</button>\n      <button className=\"button is-primary is-light mr-4\" type=\"button\" onClick={handleDecrease}>-</button>\n    </div>\n    <div>\n      <Child2 text={`child-${name}`} />\n      <ChildMemo2 text={`memo-${name}`} />\n    </div>\n    <div>\n      <Child2 text={`child-${name}-inc`} onClick={handleIncrease} />\n      <ChildMemo2 text={`memo-${name}-inc`} onClick={handleIncrease} />\n    </div>\n    <div>\n      <Child2 text={`child-${name}-dec`} onClick={handleDecrease} />\n      <ChildMemo2 text={`memo-${name}-dec`} onClick={handleDecrease} />\n    </div>\n  </div>\n));\n\nconst LifecycleApp2 = () => {\n  const [counters, setCounters] = useState([]);\n  const addCounter = useCallback((name, value = 0) => {\n    setCounters((counts) => ({\n      ...counts,\n      [name]: { value, time: '' },\n    }));\n  }, []);\n  const updateCounter = useCallback((name, callback) => {\n    setCounters((counts) => ({\n      ...counts,\n      [name]: callback(counts[name]),\n    }));\n  }, []);\n  const incCounter = useCallback((name) => {\n    updateCounter(name, (c) => ({ value: c.value + 1, time: new Date().toLocaleString() }));\n  }, [updateCounter]);\n\n  const decCounter = useCallback((name) => {\n    updateCounter(name, (c) => ({ value: c.value - 1, time: new Date().toLocaleString() }));\n  }, [updateCounter]);\n\n  const value = useMemo(() => ({\n    incCounter, decCounter, addCounter, counters,\n  }), [incCounter, decCounter, addCounter, counters]);\n\n  return (\n    <div className=\"box\">\n      <h3 className=\"title is-4\">Componente Pai</h3>\n      <GlobalContext.Provider value={value}>\n        <Component2 name=\"component 1\" />\n        <Component2 name=\"component 2\" />\n        <Component2Optmized name=\"component 3\" />\n        <Component2Memo name=\"component 4\" />\n      </GlobalContext.Provider>\n    </div>\n  );\n};\n\nconst ValueContext = React.createContext();\nconst OnChangeContext = React.createContext();\n\nconst LifecycleApp3 = () => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <OnChangeContext.Provider value={setCount}>\n      <ValueContext.Provider value={count}>\n        <Value />\n        <Update />\n      </ValueContext.Provider>\n    </OnChangeContext.Provider>\n  );\n};\n\nconst Value = React.memo(() => {\n  const value = useContext(ValueContext);\n  return <div>{value}</div>;\n});\n\nconst Update = React.memo(() => {\n  const onChange = useContext(OnChangeContext);\n  // eslint-disable-next-line react/button-has-type\n  return <button className=\"button is-primary is-light mr-4\" onClick={() => onChange((n) => n + 1)}>update</button>;\n});\n\nconst RenderCounter = ({ children }) => {\n  const renderCount = useRef(0);\n  // the text will render to a random color for\n  // each instance of the Message component\n  const getColor = () => (Math.floor(Math.random() * 255));\n  const style = {\n    color: `rgb(${getColor()},${getColor()},${getColor()})`,\n  };\n  return (\n    <div>\n      <h4 style={style}>{children}<span> ({++renderCount.current})</span></h4>\n    </div>\n  );\n};\n\nconst LifecyclePage = () => (\n  <div className=\"content\">\n    <h1 className=\"subtitle is-1\">[WIP] React Lifecycle</h1>\n    <hr />\n    <LifecycleApp1 />\n    <LifecycleApp2 />\n    {/* <LifecycleApp3 /> */}\n  </div>\n);\n\nLifecyclePage.propTypes = {};\n\nLifecyclePage.defaultProps = {};\n\nexport default LifecyclePage;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport './Forms.css';\nimport {\n  FieldArray,\n  Form, Formik, useField, useFormik, useFormikContext,\n} from 'formik';\nimport * as Yup from 'yup';\nimport React, {\n  useCallback, useContext, useMemo, useState,\n  useEffect,\n} from 'react';\nimport Code from '../../components/code';\n\nconst signupSchema = Yup.object({\n  firstName: Yup.string()\n    .max(15, 'Must be 15 characters or less')\n    .required('Required'),\n  lastName: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n});\nconst signupInitialValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n};\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: signupInitialValues,\n    validationSchema: signupSchema,\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <form className=\"box\" onSubmit={formik.handleSubmit}>\n      <h1 className=\"subtitle is-5\">Signup Form</h1>\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"firstName\">First Name</label>\n        <div className=\"control\">\n          <input\n            className={`input ${formik.errors.firstName ? 'is-danger' : ''}`}\n            id=\"firstName\"\n            name=\"firstName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.firstName}\n          />\n        </div>\n        {formik.touched.firstName && formik.errors.firstName ? (\n          <p className=\"help is-danger\">{formik.errors.firstName}</p>\n        ) : null}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"lastName\">Last Name</label>\n        <div className=\"control\">\n          <input\n            className={`input ${formik.errors.lastName ? 'is-danger' : ''}`}\n            id=\"lastName\"\n            name=\"lastName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.lastName}\n          />\n        </div>\n        {formik.touched.lastName && formik.errors.lastName ? (\n          <p className=\"help is-danger\">{formik.errors.lastName}</p>\n        ) : null}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"email\">Email Address</label>\n        <div className=\"control\">\n          <input\n            className={`input ${formik.errors.email ? 'is-danger' : ''}`}\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n        </div>\n        {formik.touched.email && formik.errors.email ? (\n          <p className=\"help is-danger\">{formik.errors.email}</p>\n        ) : null}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-primary\">Submit</button>\n        </div>\n        <div className=\"control\">\n          <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst MyTextInput = React.memo(({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={props.id || props.name}>{label}</label>\n      <div className=\"control\">\n        <input\n          className={`input ${meta.error ? 'is-danger' : ''}`}\n          type=\"text\"\n          {...field}\n          {...props}\n        />\n      </div>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </div>\n  );\n});\n\nconst MyCheckbox = React.memo(({ children, ...props }) => {\n  // React treats radios and checkbox inputs differently other input types, select, and textarea.\n  // Formik does this too! When you specify `type` to useField(), it will\n  // return the correct bag of props for you -- a `checked` prop will be included\n  // in `field` alongside `name`, `value`, `onChange`, and `onBlur`\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\n  return (\n    <div className=\"field\">\n      <div className=\"control\">\n        <label className=\"checkbox\">\n          <input type=\"checkbox\" {...field} {...props} />\n          {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </div>\n    </div>\n  );\n});\n\nconst MySelect = React.memo(({ label, children, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={props.id || props.name}>{label}</label>\n      <div className=\"control\">\n        <div className=\"select\">\n          <select {...field} {...props}>{children}</select>\n          {meta.touched && meta.error ? (\n            <div className=\"error\">{meta.error}</div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst signup2Schema = Yup.object({\n  firstName: Yup.string()\n    .max(15, 'Must be 15 characters or less')\n    .required('Required'),\n  lastName: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  acceptedTerms: Yup.boolean()\n    .required('Required')\n    .oneOf([true], 'You must accept the terms and conditions.'),\n  jobType: Yup.string()\n    .oneOf(\n      ['designer', 'development', 'product', 'other'],\n      'Invalid Job Type',\n    )\n    .required('Required'),\n});\nconst signup2InitialValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  acceptedTerms: false, // added for our checkbox\n  jobType: '', // added for our select\n};\nconst SignupForm2 = () => {\n  const handleSubmit = useCallback((values) => {\n    alert(JSON.stringify(values, null, 2));\n  }, []);\n\n  return (\n    <Formik\n      initialValues={signup2InitialValues}\n      validationSchema={signup2Schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className=\"box\">\n        <h1 className=\"subtitle is-5\">Signup Form</h1>\n        <MyTextInput\n          label=\"First Name\"\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"Jane\"\n        />\n\n        <MyTextInput\n          label=\"Last Name\"\n          name=\"lastName\"\n          type=\"text\"\n          placeholder=\"Doe\"\n        />\n\n        <MyTextInput\n          label=\"Email Address\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"jane@formik.com\"\n        />\n\n        <MySelect label=\"Job Type\" name=\"jobType\">\n          <option value=\"\">Select a job type</option>\n          <option value=\"designer\">Designer</option>\n          <option value=\"development\">Developer</option>\n          <option value=\"product\">Product Manager</option>\n          <option value=\"other\">Other</option>\n        </MySelect>\n\n        <MyCheckbox name=\"acceptedTerms\">\n          I accept the terms and conditions\n        </MyCheckbox>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-primary\">Submit</button>\n          </div>\n          <div className=\"control\">\n            <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n          </div>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\nconst friendsInitialValues = {\n  friends: [\n    {\n      name: '',\n      email: '',\n    },\n  ],\n};\n\nconst InviteFriends = () => (\n  <Formik\n    initialValues={friendsInitialValues}\n    onSubmit={async (values) => {\n      // eslint-disable-next-line no-promise-executor-return\n      await new Promise((r) => setTimeout(r, 500));\n      alert(JSON.stringify(values, null, 2));\n    }}\n  >\n    {({ values }) => (\n      <Form className=\"box\">\n        <h1 className=\"subtitle is-5\">Invite friends</h1>\n        <FieldArray name=\"friends\">\n          {({ insert, remove, push }) => (\n            <div>\n              {values.friends.length > 0\n                  && values.friends.map((friend, index) => (\n                    // eslint-disable-next-line react/no-array-index-key\n                    <div className=\"columns\" key={index}>\n                      <div className=\"column\">\n                        <MyTextInput\n                          label=\"Name\"\n                          name={`friends.${index}.name`}\n                          type=\"text\"\n                          placeholder=\"Jane Doe\"\n                        />\n\n                      </div>\n                      <div className=\"column\">\n                        <MyTextInput\n                          label=\"Email\"\n                          name={`friends.${index}.email`}\n                          type=\"email\"\n                          placeholder=\"jane@formik.com\"\n                        />\n                      </div>\n                      <div className=\"column\">\n                        <button\n                          aria-label=\"Delete\"\n                          type=\"button\"\n                          className=\"delete\"\n                          onClick={() => remove(index)}\n                        />\n                      </div>\n                    </div>\n                  ))}\n\n              <div className=\"field mb-4\">\n                <div className=\"control\">\n                  <button type=\"button\" className=\"button is-success\" onClick={() => push({ name: '', email: '' })}>Add Friend</button>\n                </div>\n              </div>\n            </div>\n          )}\n        </FieldArray>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-primary\">Invite</button>\n          </div>\n          <div className=\"control\">\n            <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n          </div>\n        </div>\n      </Form>\n    )}\n  </Formik>\n);\n\nasync function fetchNewTextC(a, b) {\n  // eslint-disable-next-line no-promise-executor-return\n  await new Promise((r) => setTimeout(r, 500));\n  return `${a}:${b}`;\n}\n\nconst ResultField = ({ label, ...props }) => {\n  const {\n    values: { textA, textB },\n    setFieldValue,\n  } = useFormikContext();\n  const [field, meta] = useField(props);\n\n  useEffect(() => {\n    let isCurrent = true;\n    // your business logic around when to fetch goes here.\n    if (textA.trim() !== '' && textB.trim() !== '') {\n      fetchNewTextC(textA, textB).then((textC) => {\n        if (isCurrent) {\n          // prevent setting old values\n          setFieldValue(props.name, textC);\n        }\n      });\n    }\n    return () => {\n      isCurrent = false;\n    };\n  }, [textB, textA, setFieldValue, props.name]);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={props.id || props.name}>{label}</label>\n      <div className=\"control\">\n        <input className=\"input\" disabled {...props} {...field} />\n      </div>\n      {Boolean(meta.touched && meta.error) ?? <div>{meta.error.toString()}</div>}\n    </div>\n  );\n};\n\nconst LinkedForm = () => {\n  const initialValues = { textA: '', textB: '', textC: '' };\n  const handleSubmit = useCallback((values) => {\n    alert(JSON.stringify(values, null, 2));\n  }, []);\n  console.log('LinkedForm');\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      <Form className=\"box\">\n        <h1 className=\"subtitle is-5\">Linked fields</h1>\n        <MyTextInput\n          label=\"textA\"\n          name=\"textA\"\n        />\n\n        <MyTextInput\n          label=\"textB\"\n          name=\"textB\"\n        />\n\n        <ResultField\n          label=\"textC\"\n          name=\"textC\"\n        />\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-primary\">Submit</button>\n          </div>\n          <div className=\"control\">\n            <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n          </div>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\n// eslint-disable-next-line max-len\nconst getYupErrors = ({ inner }) => inner.reduce((prev, curr) => ({ ...prev, [curr.path]: curr.errors }), {});\n\nconst useForm = (initialValues) => {\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n\n  const handleChange = useCallback((e) => {\n    // eslint-disable-next-line no-shadow\n    setValues((values) => ({ ...values, [e.target.name]: e.target.value }));\n  }, []);\n\n  const handleBlur = useCallback((e) => {\n    // eslint-disable-next-line no-shadow\n    setTouched((touched) => ({ ...touched, [e.target.name]: true }));\n  }, []);\n\n  useEffect(() => {\n    const validation = () => {\n      signupSchema.validate(values, { abortEarly: false })\n        .catch((yupValidation) => setErrors(getYupErrors(yupValidation)));\n    };\n    validation();\n  }, [values]);\n\n  return {\n    handleChange, handleBlur, values, errors, touched,\n  };\n};\n\nconst SignupFormSimple = () => {\n  const {\n    values, errors, touched, handleChange, handleBlur,\n  } = useForm(signupInitialValues);\n\n  const handleSubmit = useCallback(() => {\n    alert(JSON.stringify(values, null, 2));\n  }, [values]);\n\n  console.log('SignupFormSimple');\n  return (\n    <form className=\"box\" onSubmit={handleSubmit}>\n      <h1 className=\"subtitle is-5\">Signup Form</h1>\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"firstName\">First Name</label>\n        <div className=\"control\">\n          <input\n            className={`input ${errors.firstName ? 'is-danger' : ''}`}\n            id=\"firstName\"\n            name=\"firstName\"\n            type=\"text\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.firstName}\n          />\n        </div>\n        {touched.firstName && errors.firstName ? (\n          <p className=\"help is-danger\">{errors.firstName}</p>\n        ) : null}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"lastName\">Last Name</label>\n        <div className=\"control\">\n          <input\n            className={`input ${errors.lastName ? 'is-danger' : ''}`}\n            id=\"lastName\"\n            name=\"lastName\"\n            type=\"text\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.lastName}\n          />\n        </div>\n        {touched.lastName && errors.lastName ? (\n          <p className=\"help is-danger\">{errors.lastName}</p>\n        ) : null}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"email\">Email Address</label>\n        <div className=\"control\">\n          <input\n            className={`input ${errors.email ? 'is-danger' : ''}`}\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n          />\n        </div>\n        {touched.email && errors.email ? (\n          <p className=\"help is-danger\">{errors.email}</p>\n        ) : null}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-primary\">Submit</button>\n        </div>\n        <div className=\"control\">\n          <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst FormContext = React.createContext();\n\nconst useFormField = ({ name }) => {\n  const {\n    values, errors, touched,\n    handleChange, handleBlur,\n  } = useContext(FormContext);\n\n  return [{\n    value: values[name],\n    onChange: handleChange,\n    onBlur: handleBlur,\n  },\n  {\n    error: errors[name],\n    touched: touched[name],\n  },\n  ];\n};\n\nconst MyTextInputSimple = React.memo(({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useFormField(props);\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={props.id || props.name}>{label}</label>\n      <div className=\"control\">\n        <input\n          className={`input ${meta.error ? 'is-danger' : ''}`}\n          type=\"text\"\n          {...field}\n          {...props}\n        />\n      </div>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </div>\n  );\n});\n\nconst MyCheckboxSimple = React.memo(({ children, ...props }) => {\n  // React treats radios and checkbox inputs differently other input types, select, and textarea.\n  // Formik does this too! When you specify `type` to useField(), it will\n  // return the correct bag of props for you -- a `checked` prop will be included\n  // in `field` alongside `name`, `value`, `onChange`, and `onBlur`\n  const [field, meta] = useFormField({ ...props, type: 'checkbox' });\n  return (\n    <div className=\"field\">\n      <div className=\"control\">\n        <label className=\"checkbox\">\n          <input type=\"checkbox\" {...field} {...props} />\n          {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </div>\n    </div>\n  );\n});\n\nconst MySelectSimple = React.memo(({ label, children, ...props }) => {\n  const [field, meta] = useFormField(props);\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={props.id || props.name}>{label}</label>\n      <div className=\"control\">\n        <div className=\"select\">\n          <select {...field} {...props}>{children}</select>\n          {meta.touched && meta.error ? (\n            <div className=\"error\">{meta.error}</div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst SignupForm2Simple = () => {\n  const {\n    values, errors, touched, handleChange, handleBlur,\n  } = useForm(signup2InitialValues);\n\n  const handleSubmit = useCallback(() => {\n    alert(JSON.stringify(values, null, 2));\n  }, [values]);\n\n  const value = useMemo(() => ({\n    values, errors, touched, schema: signup2Schema, handleChange, handleBlur,\n  }), [errors, handleBlur, handleChange, touched, values]);\n\n  console.log('SignupForm2Simple');\n  return (\n    <FormContext.Provider value={value}>\n      <form className=\"box\" onSubmit={handleSubmit}>\n        <h1>Signup Form Simple 2</h1>\n        <MyTextInputSimple\n          label=\"First Name\"\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"Jane\"\n        />\n\n        <MyTextInputSimple\n          label=\"Last Name\"\n          name=\"lastName\"\n          type=\"text\"\n          placeholder=\"Doe\"\n        />\n\n        <MyTextInputSimple\n          label=\"Email Address\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"jane@formik.com\"\n        />\n\n        <MySelectSimple label=\"Job Type\" name=\"jobType\">\n          <option value=\"\">Select a job type</option>\n          <option value=\"designer\">Designer</option>\n          <option value=\"development\">Developer</option>\n          <option value=\"product\">Product Manager</option>\n          <option value=\"other\">Other</option>\n        </MySelectSimple>\n\n        <MyCheckboxSimple name=\"acceptedTerms\">\n          I accept the terms and conditions\n        </MyCheckboxSimple>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-primary\">Submit</button>\n          </div>\n          <div className=\"control\">\n            <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n          </div>\n        </div>\n      </form>\n    </FormContext.Provider>\n  );\n};\n\nconst Forms = () => (\n  <div className=\"content\">\n    <h1 className=\"subtitle is-1\">Form Handling</h1>\n    <hr />\n    <p>\n      Objetivo aqui é testar diferentes formas de tratamento de formulários em react,\n      para iniciar testaremos a lib <a href=\"https://formik.org/\">Formik</a> usando o hook useFormk.<br />\n      Neste teste achei bem prático o uso do hook, porem o html se torna bem extenso e repetitivo.\n    </p>\n    <Code>\n      {`const SignupForm = () => {\n        const formik = useFormik({\n          initialValues: signupInitialValues,\n          validationSchema: signupSchema,\n          onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n          },\n        });\n        return (\n          <form className=\"box\" onSubmit={formik.handleSubmit}>\n            <h1 className=\"subtitle is-5\">Signup Form</h1>\n            <div className=\"field\">\n              <label className=\"label\" htmlFor=\"firstName\">First Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.firstName}\n                />\n              </div>\n              {formik.touched.firstName && formik.errors.firstName ? (\n                <p className=\"help is-danger\">{formik.errors.firstName}</p>\n              ) : null}\n            </div>\n            {/* Resto do html do formulário  */}\n      \n            <div className=\"field is-grouped\">\n              <div className=\"control\">\n                <button type=\"submit\" className=\"button is-primary\">Submit</button>\n              </div>\n              <div className=\"control\">\n                <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n              </div>\n            </div>\n          </form>\n        );\n      };`}\n    </Code>\n    <SignupForm />\n    <p>\n      Para nosso segundo teste eu usei o Formik element no JSX e abstrai o html dos campos em\n      componentes menores usando o hook useField, essa abordagem garante muito mais reus de código\n      e pouca repetição no JSX.\n    </p>\n    <p>\n      <strong>OBS.</strong> dentro do element Formik podemos usar o <i>form</i> porem teremos que\n      passar manualmente os eventos de onSubmit e onReset, enquanto o elemento <i>Form</i>\n      abstrai essa necessidade reduzindo a quantidade de código escrito.\n    </p>\n    <Code>\n      {`const MyTextInput = React.memo(({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={props.id || props.name}>{label}</label>\n      <div className=\"control\">\n        <input\n          className='input'\n          type=\"text\"\n          {...field}\n          {...props}\n        />\n      </div>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </div>\n  );\n});\nconst SignupForm = () => {\n  const handleSubmit = useCallback((values) => {\n    alert(JSON.stringify(values, null, 2));\n  }, []);\n\n  return (\n    <Formik\n      initialValues={signup2InitialValues}\n      validationSchema={signup2Schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className=\"box\">\n        <h1 className=\"subtitle is-5\">Signup Form</h1>\n        <MyTextInput\n          label=\"First Name\"\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"Jane\"\n        />\n\n        <MyTextInput\n          label=\"Last Name\"\n          name=\"lastName\"\n          type=\"text\"\n          placeholder=\"Doe\"\n        />\n\n        {/* Resto do html do formulário  */}\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-primary\">Submit</button>\n          </div>\n          <div className=\"control\">\n            <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n          </div>\n        </div>\n      </Form>\n    </Formik>\n  );\n};`}\n    </Code>\n    <SignupForm2 />\n    <p>\n      Com os testes anteriores conclui que o Formik de fato é uma lib bem completa que permite\n      formas variadas de uso, porem para nosso teceiro teste vamos tentar replicar de forma minima\n      o funciomaneto dos testes anteriores sem o uso da lib do Formik. Esta será uma forma incrivel\n      de entender melhor o funcionamento dela ou até mesmo replicar sua facilidade em projetos\n      menores que não queiram importar a lib completa para dentro das dependencias.\n    </p>\n    <p>\n      Para replicar o nosso primeiro experimento eu precisei criar um hook similar ao useFormik,\n      tarefa que se mostrou mais simples do que eu esperava e com poucas linhas consegui\n      fazê-lo funcionar.\n    </p>\n    <Code>\n      {`const useForm = (initialValues) => {\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n\n  const handleChange = useCallback((e) => {\n    // eslint-disable-next-line no-shadow\n    setValues((values) => ({ ...values, [e.target.name]: e.target.value }));\n  }, []);\n\n  const handleBlur = useCallback((e) => {\n    // eslint-disable-next-line no-shadow\n    setTouched((touched) => ({ ...touched, [e.target.name]: true }));\n  }, []);\n\n  useEffect(() => {\n    const validation = () => {\n      signupSchema.validate(values, { abortEarly: false })\n        .catch((yupValidation) => setErrors(getYupErrors(yupValidation)));\n    };\n    validation();\n  }, [values]);\n\n  return {\n    handleChange, handleBlur, values, errors, touched,\n  };\n};`}\n    </Code>\n    <SignupFormSimple />\n    <p>\n      Para replicar o nosso segundo teste foi necessário criar um hook similar ao useField,\n      o que tambem consegui fazer com poucas linhas.\n    </p>\n    <Code>\n      {`const FormContext = React.createContext();\n\nconst useFormField = ({ name }) => {\n  const {\n    values, errors, touched,\n    handleChange, handleBlur,\n  } = useContext(FormContext);\n\n  return [{\n    value: values[name],\n    onChange: handleChange,\n    onBlur: handleBlur,\n  },\n  {\n    error: errors[name],\n    touched: touched[name],\n  },\n  ];\n};`}\n    </Code>\n    <SignupForm2Simple />\n    <p>\n      Apesar do sucesso deste experimento, aqui implementamos apenas uma parte pequena de um lib\n      bem completa e testada e com certeza o recomendado seria usar o Formik e não recriar sua\n      própria lib, para finalizar temos mais alguns testes de uso do Formik e todo seu poder.\n    </p>\n    <InviteFriends />\n    <LinkedForm />\n  </div>\n);\n\nForms.propTypes = {};\n\nForms.defaultProps = {};\n\nexport default Forms;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.data,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useDataApi = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      if (!didCancel) {\n        dispatch({ type: 'FETCH_INIT' });\n      }\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', data: result.data });\n        }\n      } catch (e) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', error: e });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl];\n};\n\nexport default useDataApi;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst withDataFetching = (WrappedComponent, { url: initialUrl, data: initialData }) => {\n  const WithDataFetching = (...args) => {\n    const [data, setData] = useState(initialData);\n    const [url, setUrl] = useState(initialUrl);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n      let didCancel = false;\n      const fetchData = async () => {\n        setIsLoading(true);\n        setIsError(false);\n        try {\n          const result = await axios(url);\n\n          if (!didCancel) {\n            setData(result.data);\n            setIsLoading(false);\n          }\n        } catch (e) {\n          if (!didCancel) {\n            setIsError(true);\n            setIsLoading(false);\n          }\n        }\n      };\n\n      fetchData();\n\n      return () => {\n        didCancel = true;\n      };\n    }, [url]);\n\n    return (\n      <WrappedComponent\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...args}\n        isLoading={isLoading}\n        isError={isError}\n        data={data}\n        doFetch={setUrl}\n      />\n    );\n  };\n\n  WithDataFetching.displayName = `WithDataFetching(${WrappedComponent.name})`;\n\n  return WithDataFetching;\n};\n\nexport default withDataFetching;\n","/* eslint-disable react/no-unstable-nested-components */\n/* eslint-disable react/prop-types */\nimport axios from 'axios';\nimport { useState, useEffect, Suspense } from 'react';\nimport Code from '../../components/code';\n// import useDataApi from './useDataApi'\nimport useDataApi from './useDataApiReducer';\nimport withDataFetching from './withDataFetching';\n\nconst SearchPanelTemplate = ({\n  title, children, value, onChange, onSubmit,\n}) => (\n  <article className=\"panel is-primary\">\n    <p className=\"panel-heading\">\n      {title}\n    </p>\n    <div className=\"panel-block\">\n      <form className=\"control has-icons-left\" onSubmit={onSubmit}>\n        <input className=\"input is-primary\" type=\"text\" placeholder=\"Search\" value={value} onChange={onChange} />\n        <span className=\"icon is-left\">\n          <i className=\"mdi mdi-magnify\" aria-hidden=\"true\" />\n        </span>\n      </form>\n    </div>\n    {children}\n  </article>\n);\n\nconst ArticlesPaneV1 = () => {\n  const [data, setData] = useState({ hits: [] });\n  const [query, setQuery] = useState('react');\n  const [url, setUrl] = useState('http://hn.algolia.com/api/v1/search?query=react');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const isEmpty = !isError && !isLoading && data.hits.length === 0;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        const result = await axios(url);\n        setData(result.data);\n      } catch (e) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n\n  const handleSubmit = (e) => {\n    setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`);\n    e.preventDefault();\n  };\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV1\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      {isLoading && (<progress className=\"progress is-small is-primary\" max=\"100\" />)}\n      {!isLoading && isError && <div className=\"notification is-danger\">Something got wrong, please try again after some seconds</div>}\n      {!isError && !isLoading && (\n      <>\n        {isEmpty && (<div className=\"notification is-warning\">Results not found, try another search term</div>)}\n        {!isEmpty && (\n          data.hits.slice(0, 5).map((item) => (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n          ))\n        )}\n      </>\n      )}\n    </SearchPanelTemplate>\n  );\n};\n\nconst FetchBox = ({\n  children: Children,\n  baseUrl,\n  queryParams,\n  Placeholder,\n  Empty,\n  Error,\n}) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const isEmpty = !isError && !isLoading && data.length === 0;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        const result = await axios.get(`${baseUrl}`, { params: queryParams });\n        setData(result.data);\n      } catch (e) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [baseUrl, queryParams]);\n\n  return (\n    <>\n      {isError && <Error />}\n      {isLoading && <Placeholder />}\n      {!isLoading && !isError && (isEmpty ? <Empty /> : <Children data={data} />)}\n    </>\n  );\n};\n\nconst ArticlesPaneV2 = () => {\n  const [query, setQuery] = useState('react');\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\n    'http://hn.algolia.com/api/v1/search?query=react',\n    { hits: [] },\n  );\n\n  const isEmpty = !isError && !isLoading && data.hits.length === 0;\n\n  const handleSubmit = (e) => {\n    doFetch(`http://hn.algolia.com/api/v1/search?query=${query}`);\n    e.preventDefault();\n  };\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV2\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      {isLoading && (<progress className=\"progress is-small is-primary\" max=\"100\" />)}\n      {!isLoading && isError && <div className=\"notification is-danger\">Something got wrong, please try again after some seconds</div>}\n      {!isError && !isLoading && (\n      <>\n        {isEmpty && (<div className=\"notification is-warning\">Results not found, try another search term</div>)}\n        {!isEmpty && (\n          data.hits.slice(0, 5).map((item) => (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n          ))\n        )}\n      </>\n      )}\n    </SearchPanelTemplate>\n  );\n};\n\nconst ArticlesV3 = ({\n  data, isLoading, isError, doFetch,\n}) => {\n  const [query, setQuery] = useState('react');\n  const isEmpty = !isError && !isLoading && data.hits.length === 0;\n\n  const handleSubmit = (e) => {\n    doFetch(`http://hn.algolia.com/api/v1/search?query=${query}`);\n    e.preventDefault();\n  };\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV3\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      {isLoading && (<progress className=\"progress is-small is-primary\" max=\"100\" />)}\n      {!isLoading && isError && <div className=\"notification is-danger\">Something got wrong, please try again after some seconds</div>}\n      {!isError && !isLoading && (\n      <>\n        {isEmpty && (<div className=\"notification is-warning\">Results not found, try another search term</div>)}\n        {!isEmpty && (\n          data.hits.slice(0, 5).map((item) => (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n          ))\n        )}\n      </>\n      )}\n    </SearchPanelTemplate>\n  );\n};\n\nconst ArticlesPaneV3 = withDataFetching(ArticlesV3, {\n  url: 'http://hn.algolia.com/api/v1/search?query=react',\n  data: { hits: [] },\n});\n\nconst ArticlesPaneV4 = () => {\n  const [query, setQuery] = useState('react');\n  const [queryParams, setQueryParams] = useState({ query });\n\n  const handleSubmit = (e) => {\n    setQueryParams({ ...queryParams, query });\n    e.preventDefault();\n  };\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV4\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      <FetchBox\n        baseUrl=\"http://hn.algolia.com/api/v1/search\"\n        queryParams={queryParams}\n        Placeholder={() => <progress className=\"progress is-small is-primary\" max=\"100\" />}\n        Empty={() => <div className=\"notification is-warning\">Results not found, try another search term</div>}\n        Error={() => <div className=\"notification is-danger\">Something got wrong, please try again after some seconds</div>}\n      >\n        {({ data = {} }) => (\n          data.hits.slice(0, 5).map((item) => (item.title\n            && (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n            )\n          ))\n        )}\n      </FetchBox>\n    </SearchPanelTemplate>\n  );\n};\n\nconst wrapPromise = (promise) => {\n  let status = 'pending';\n  let response;\n\n  const suspender = promise.then(\n    (res) => {\n      status = 'success';\n      response = res;\n    },\n    (err) => {\n      status = 'error';\n      response = err;\n    },\n  );\n\n  const read = () => {\n    switch (status) {\n      case 'pending':\n        throw suspender;\n      case 'error':\n        throw response;\n      default:\n        return response;\n    }\n  };\n\n  return { read };\n};\n\nconst fetchData = (url) => {\n  const promise = fetch(url)\n    .then((res) => res.json())\n    .then((res) => res.data);\n\n  return wrapPromise(promise);\n};\n\nconst resource = fetchData(\n  'http://hn.algolia.com/api/v1/search?query=react',\n);\n\nconst ArticlesPaneV5 = () => {\n  const [query, setQuery] = useState('react');\n  const data = resource.read();\n\n  const isEmpty = data.hits.length === 0;\n\n  const handleSubmit = (e) => {\n    // doFetch(`http://hn.algolia.com/api/v1/search?query=${query}`);\n    e.preventDefault();\n  };\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV5\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      <Suspense fallback={<progress className=\"progress is-small is-primary\" max=\"100\" />}>\n        {isEmpty && (<div className=\"notification is-warning\">Results not found, try another search term</div>)}\n        {!isEmpty && (\n          data.hits.slice(0, 5).map((item) => (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n          ))\n        )}\n      </Suspense>\n    </SearchPanelTemplate>\n  );\n};\n\nconst FetchPage = () => (\n  <div className=\"content\">\n    <h1 className=\"subtitle is-1\">Fetch data </h1>\n    <hr />\n    <p>\n      O fetch de dados é uma terefa comum no dia a dia dos desenvolvedores e podemos\n      fazer isso manualmente ou com alguma lib como o axios sem muita dificulade.\n      Sendo assim  a proposta deste experimento é entender as melhores abordagens\n      para a DX (Dev Experience), ou seja, facilidade de manutenção de menor\n      quantidade de linhas duplicadas.\n    </p>\n    <p>\n      O primeiro experimento é implementar a lógica do fetch completamente dentro do componente,\n      sem reuso nenhum de lógica essa acaba sendo a abordagem com maior quantidade de códigos\n      duplicados entre componentes.\n    </p>\n    <Code>\n      {`const ArticlesPanel = () => {\n  const [data, setData] = useState({ hits: [] });\n  const [query, setQuery] = useState('react');\n  const [url, setUrl] = useState('http://hn.algolia.com/api/v1/search?query=react');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const isEmpty = !isError && !isLoading && data.hits.length === 0;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        const result = await axios(url);\n        setData(result.data);\n      } catch (e) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n\n  const handleSubmit = (e) => {\n    setUrl(\\`http://hn.algolia.com/api/v1/search?query=\\${query}\\`);\n    e.preventDefault();\n  };\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV1\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      {isLoading && (<progress className=\"progress is-small is-primary\" max=\"100\" />)}\n      {!isLoading && isError && <div className=\"notification is-danger\">Something got wrong, please try again after some seconds</div>}\n      {!isError && !isLoading && (\n      <>\n        {isEmpty && (<div className=\"notification is-warning\">Results not found, try another search term</div>)}\n        {!isEmpty && (\n          data.hits.map((item) => (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n          ))\n        )}\n      </>\n      )}\n    </SearchPanelTemplate>\n  );\n};\n      `}\n    </Code>\n    <ArticlesPaneV1 />\n    <p>\n      O segundo experimento é implementar um hook para abstrair a lógica do fetch e possibilitar\n      que ela seja reusada em outros componentes, essa abordadagem é bem flexivel e deixa o código\n      limpo facilitando a manuteção e evitando a repetição de código.\n    </p>\n    <Code>\n      {`const ArticlesPanel = () => {\n  const [query, setQuery] = useState('react');\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\n    'http://hn.algolia.com/api/v1/search?query=react',\n    { hits: [] },\n  );\n\n  const isEmpty = !isError && !isLoading && data.hits.length === 0;\n\n  const handleSubmit = (e) => {\n    doFetch(\\`http://hn.algolia.com/api/v1/search?query=\\${query}\\`);\n    e.preventDefault();\n  };\n\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV1\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      {isLoading && (<progress className=\"progress is-small is-primary\" max=\"100\" />)}\n      {!isLoading && isError && <div className=\"notification is-danger\">Something got wrong, please try again after some seconds</div>}\n      {!isError && !isLoading && (\n      <>\n        {isEmpty && (<div className=\"notification is-warning\">Results not found, try another search term</div>)}\n        {!isEmpty && (\n          data.hits.map((item) => (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n          ))\n        )}\n      </>\n      )}\n    </SearchPanelTemplate>\n  );\n};\n      `}\n    </Code>\n    <ArticlesPaneV2 />\n    <p>\n      O terceiro experimento é implementar uma HOC para abstrair a lógica do fetch e possibilitar\n      que ela seja reusada em outros componentes, essa abordadagem não se mostrou muito flexivel\n      mas deixa o código limpo e tambem evita a repetição de código.\n    </p>\n    <Code>\n      {`const ArticlesV3 = ({\n  data, isLoading, isError, doFetch,\n}) => {\n  const [query, setQuery] = useState('react');\n  const isEmpty = !isError && !isLoading && data.hits.length === 0;\n\n  const handleSubmit = (e) => {\n    doFetch(\\`http://hn.algolia.com/api/v1/search?query=\\${query}\\`);\n    e.preventDefault();\n  };\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV3\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      {isLoading && (<progress className=\"progress is-small is-primary\" max=\"100\" />)}\n      {!isLoading && isError && <div className=\"notification is-danger\">Something got wrong, please try again after some seconds</div>}\n      {!isError && !isLoading && (\n      <>\n        {isEmpty && (<div className=\"notification is-warning\">Results not found, try another search term</div>)}\n        {!isEmpty && (\n          data.hits.map((item) => (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n          ))\n        )}\n      </>\n      )}\n    </SearchPanelTemplate>\n  );\n};\n\nconst ArticlesPaneV3 = withDataFetching(ArticlesV3, {\n  url: 'http://hn.algolia.com/api/v1/search?query=react',\n  data: { hits: [] },\n});\n      `}\n    </Code>\n    <ArticlesPaneV3 />\n    <p>\n      O quarto experimento é implementar um componente para deixar de forma declarativa no JSX\n      a lógica de fetch, essa abordagem se mostrou bem interessante porém funciona melhor para\n      o GET de dados, não parece muito interessante para os outros metodos (POST, PU, DELETE)\n    </p>\n    <Code>\n      {`const ArticlesPanel = () => {\n  const [query, setQuery] = useState('react');\n  const [queryParams, setQueryParams] = useState({ query });\n\n  const handleSubmit = (e) => {\n    setQueryParams({ ...queryParams, query });\n    e.preventDefault();\n  };\n\n  return (\n    <SearchPanelTemplate title=\"ArticlesPaneV4\" onSubmit={handleSubmit} value={query} onChange={(event) => setQuery(event.target.value)}>\n      <FetchBox\n        baseUrl=\"http://hn.algolia.com/api/v1/search\"\n        queryParams={queryParams}\n        Placeholder={() => <progress className=\"progress is-small is-primary\" max=\"100\" />}\n        Empty={() => <div className=\"notification is-warning\">Results not found, try another search term</div>}\n        Error={() => <div className=\"notification is-danger\">Something got wrong, please try again after some seconds</div>}\n      >\n        {({ data = {} }) => (\n          data.hits.map((item) => (item.title\n            && (\n            <a key={item.objectID} href={item.url} target=\"_blank\" className=\"panel-block\" rel=\"noreferrer\">\n              {item.title}\n            </a>\n            )\n          ))\n        )}\n      </FetchBox>\n    </SearchPanelTemplate>\n  );\n};\n      `}\n    </Code>\n    <ArticlesPaneV4 />\n    <p>\n      O quinto e ultimo experimento só esta disponivel na recem lançada versão 18 do React\n      usando o Suspense para o fetch de dados.\n    </p>\n    {/* <ArticlesPaneV5 /> */}\n  </div>\n);\n\nexport default FetchPage;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/button-has-type */\nimport './DynamicComponent.css';\nimport { useState, createElement } from 'react';\nimport Code from '../../components/code';\n\nconst Step1 = () => (\n  <>\n    <h1 className=\"title\">Step 1</h1>\n    <h2 className=\"subtitle\">step description</h2>\n  </>\n);\n\nconst Step2 = () => (\n  <div className=\"content\">\n    <h1>Step 2</h1>\n    <p>step description</p>\n  </div>\n);\n\nconst Step3 = () => (\n  <div className=\"content\">\n    <h1>Step 3</h1>\n    <a href=\"#link\">link</a>\n  </div>\n);\n\nconst DynamicComponentGeneration = () => {\n  const [index, setIndex] = useState(0);\n  const [components, setComponents] = useState([Step1, Step2, Step3]);\n  const canPrev = index > 0;\n  const canNext = index < components.length - 1;\n\n  const handleNext = () => {\n    setIndex((i) => i + 1);\n  };\n  const handlePrev = () => {\n    setIndex((i) => i - 1);\n  };\n  const handleGenerateButtonClick = () => {\n    const id = Date.now();\n    const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    // eslint-disable-next-line react/no-unstable-nested-components\n    const Generated = () => <><h1 className=\"title\">Generated</h1><h2 style={{ color: `#${randomColor}` }} className=\"subtitle\">{id}</h2></>;\n    setComponents((comps) => [...comps, Generated]);\n  };\n\n  const SpecificStep = components[index];\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <SpecificStep />\n      </div>\n      <div className=\"card-footer\">\n        <button disabled={!canPrev} onClick={handlePrev} className=\"card-footer-item\">\n          Prev\n        </button>\n\n        <button disabled={!canNext} onClick={handleNext} className=\"card-footer-item\">\n          Next\n        </button>\n\n        <button onClick={handleGenerateButtonClick} className=\"card-footer-item\">Gerar Novo</button>\n      </div>\n    </div>\n  );\n};\n\nconst NotificationComponent = ({ text }) => (\n  <div className=\"notification\">\n    {text}\n  </div>\n);\n\nconst QuoteComponent = ({ text, author }) => (\n  <div className=\"card\">\n    <div className=\"card-content\">\n      <p className=\"title is-5\">“{text}”</p>\n      <p className=\"subtitle is-6\">{author}</p>\n    </div>\n  </div>\n);\n\nconst PostComponent = ({\n  content, name, socialname, datetime, tags,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <p><strong>{name}</strong> (<small>@{socialname}</small>)</p>\n          <p>{content}\n            {tags.map((tag) => <a href=\"#\">#{tag}</a>)}\n            <br />\n            <time dateTime={datetime}>{new Date(datetime).toLocaleDateString()}</time>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst ListComponents = {\n  notification: NotificationComponent,\n  quote: QuoteComponent,\n  post: PostComponent,\n};\n\nconst items = [{\n  type: 'quote',\n  text: 'There are two hard things in computer science: cache invalidation, naming things, and off-by-one errors.',\n  author: 'Antony Atwood',\n}, {\n  type: 'post',\n  content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec iaculis mauris.',\n  name: 'John Smith',\n  socialname: 'johnsmith',\n  datetime: '2022-01-02',\n  tags: ['css', 'html'],\n}, {\n  type: 'notification',\n  text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec iaculis mauris.',\n}, {\n  type: 'quote',\n  text: 'There are two hard things in computer science: cache invalidation, naming things, and off-by-one errors.',\n  author: 'Jeff Atwood',\n}, {\n  type: 'post',\n  content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec iaculis mauris.',\n  name: 'Mike Jordan',\n  socialname: 'mikejord',\n  datetime: '2022-01-03',\n  tags: ['ts', 'responsive'],\n}, {\n  type: 'notification',\n  text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec iaculis mauris.',\n}];\n\nconst ListItemComponent = ({ item }) => {\n  // component does exist\n  if (typeof ListComponents[item.type] !== 'undefined') {\n    return createElement(ListComponents[item.type], {\n      ...item,\n    });\n  }\n  return null;\n};\n\nconst DynamicList = () => (\n  <div className=\"container\">\n    <h2>Lista de posts dinâmicos</h2>\n    <hr />\n    {/* eslint-disable-next-line react/no-array-index-key */}\n    {items.map((item, index) => <div className=\"mb-4\"><ListItemComponent key={index} item={item} /></div>)}\n  </div>\n);\n\nconst TextField = ({\n  name, value, onChange, label, placeholder,\n}) => (\n  <div className=\"field\">\n    <label htmlFor={name} className=\"label\">{label}</label>\n    <div className=\"control\">\n      <input id={name} name={name} value={value || ''} onChange={onChange} className=\"input\" type=\"text\" placeholder={placeholder} />\n    </div>\n  </div>\n);\n\nconst SelectField = ({\n  name, value, onChange, label, options,\n}) => (\n  <div className=\"field\">\n    <label htmlFor={name} className=\"label\">{label}</label>\n    <div className=\"control\">\n      <div className=\"select\">\n        <select id={name} name={name} value={value || ''} onChange={onChange}>\n          {options.map((option) => <option>{option}</option>)}\n        </select>\n      </div>\n    </div>\n  </div>\n);\n\nconst TextareaField = ({\n  name, value, onChange, label, placeholder,\n}) => (\n  <div className=\"field\">\n    <label htmlFor={name} className=\"label\">{label}</label>\n    <div className=\"control\">\n      <textarea id={name} name={name} value={value || ''} onChange={onChange} className=\"textarea\" placeholder={placeholder} />\n    </div>\n  </div>\n);\n\nconst FormComponents = {\n  text: TextField,\n  textarea: TextareaField,\n  select: SelectField,\n};\n\nconst formMetadata = [{\n  type: 'text',\n  name: 'name',\n  label: 'Nome',\n  placeholder: 'Nome Completo',\n}, {\n  type: 'text',\n  name: 'nick',\n  label: 'Apelido',\n  placeholder: '',\n}, {\n  type: 'select',\n  name: 'state',\n  label: 'Estado Civil',\n  options: ['Casado', 'Solteiro'],\n}, {\n  type: 'textarea',\n  name: 'message',\n  label: 'Mensagem',\n  placeholder: 'Mensagem até 250 caracteres',\n}];\n\nconst FormItemComponent = ({ input, ...rest }) => {\n  // component does exist\n  if (typeof FormComponents[input.type] !== 'undefined') {\n    return createElement(FormComponents[input.type], {\n      ...input,\n      ...rest,\n    });\n  }\n  return null;\n};\n\nconst DynamicForm = () => {\n  const [formValues, setFormValues] = useState({});\n  const handleSubmit = () => {\n    alert(JSON.stringify(formValues));\n  };\n  return (\n    <div className=\"container\">\n      <h2>Formulário dinâmico</h2>\n      <hr />\n      {formMetadata.map((input) => (\n        <FormItemComponent\n          key={input.name}\n          input={input}\n          value={formValues[input.name]}\n          onChange={(e) => console.log(e.target.value)\n            || setFormValues({ ...formValues, [input.name]: e.target.value })}\n        />\n      ))}\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button className=\"button is-link\" onClick={handleSubmit}>Submit</button>\n        </div>\n        <div className=\"control\">\n          <button className=\"button is-link is-light\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DynamicComponent = () => (\n  <div className=\"content\">\n    <h1 className=\"subtitle is-1\">Dynamic Component</h1>\n    <hr />\n    <p>\n      Apesar de não recomendado é possivel criar componentes em tempo de execução,\n      dentro do click de um botão por exemplo:\n    </p>\n    <DynamicComponentGeneration />\n    <Code>\n      {`const DynamicComponentGeneration = () => {\n  const [index, setIndex] = useState(0);\n  const [components, setComponents] = useState([]);\n  const canPrev = index > 0;\n  const canNext = index < components.length - 1;\n\n  const handleNext = () => {\n    setIndex((i) => i + 1);\n  };\n  const handlePrev = () => {\n    setIndex((i) => i - 1);\n  };\n  const handleGenerateButtonClick = () => {\n    const id = Date.now();\n    const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    const Generated = () => <><h1 className=\"title\">Generated</h1><h2 style={{ color: randomColor }} className=\"subtitle\">{id}</h2></>;\n    setComponents((comps) => [...comps, Generated]);\n  };\n\n  const CurrentStep = components[index];\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <CurrentStep />\n      </div>\n      <div className=\"card-footer\">\n        <button disabled={!canPrev} onClick={handlePrev} className=\"card-footer-item\">Prev</button>\n        <button disabled={!canNext} onClick={handleNext} className=\"card-footer-item\">Next</button>\n        <button onClick={handleGenerateButtonClick} className=\"card-footer-item\">Gerar Novo</button>\n      </div>\n    </div>\n  );\n};\n`}\n    </Code>\n    <p>\n      Esta aplicação porém parece não ter aplicação real em nenhum cenário prático,\n      já que o recomendado em uma situação similar a este exemplo seria salvar apenas os dados das\n      props no estado e passar esses dados para o componente de forma dinâmica,\n      conforme o exemplo abaixo:\n    </p>\n    <Code>\n      {`const GeneratedComponent = ({ id, randomColor }) => <><h1 className=\"title\">Generated</h1><h2 style={{ color: randomColor }} className=\"subtitle\">{id}</h2></>;\nconst DynamicComponentGeneration = () => {\n  const [index, setIndex] = useState(0);\n  const [items, setItems] = useState([]);\n  const canPrev = index > 0;\n  const canNext = index < items.length - 1;\n\n  const handleNext = () => {\n    setIndex((i) => i + 1);\n  };\n  const handlePrev = () => {\n    setIndex((i) => i - 1);\n  };\n  const handleGenerateButtonClick = () => {\n    const id = Date.now();\n    const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    setItems((items) => [...items, { id, randomColor }]);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <GeneratedComponent {...items[index]} />\n      </div>\n      <div className=\"card-footer\">\n        <button disabled={!canPrev} onClick={handlePrev} className=\"card-footer-item\">Prev</button>\n        <button disabled={!canNext} onClick={handleNext} className=\"card-footer-item\">Next</button>\n        <button onClick={handleGenerateButtonClick} className=\"card-footer-item\">Gerar Novo</button>\n      </div>\n    </div>\n  );\n};`}\n    </Code>\n    <p>\n      Outro exemplo muito mais favoravel e até recomendado para o uso de componentes dinâmicos\n      seriam a renderização de componentes através de metadados, como por exemplo um formulário\n      dinâmico, uma tabela genérica de dados ou uma lista de posts de uma página que podem ter\n      diferentes formatos, conforme os exemplos abaixo:\n    </p>\n    <DynamicForm />\n    <br />\n    <DynamicList />\n  </div>\n);\n\nDynamicComponent.propTypes = {};\n\nDynamicComponent.defaultProps = {};\n\nexport default DynamicComponent;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/button-has-type */\nimport ReactDOM from 'react-dom';\nimport {\n  useState, useEffect, forwardRef, useRef,\n} from 'react';\nimport Code from '../../components/code';\nimport './CoolPortal.css';\n\nconst WindowPortal = forwardRef(({\n  children, width, height, onClose, cssFiles,\n}, ref) => {\n  const containerRef = useRef();\n\n  useEffect(() => {\n    const containerEl = document.createElement('div');\n    const externalWindow = window.open('', '', `width=${width},height=${height}`);\n\n    cssFiles.forEach((file) => {\n      const newLinkEl = externalWindow.document.createElement('link');\n      newLinkEl.rel = 'stylesheet';\n      newLinkEl.href = file;\n      externalWindow.document.head.appendChild(newLinkEl);\n    });\n\n    externalWindow.document.body.appendChild(containerEl);\n    externalWindow.onbeforeunload = onClose;\n    containerRef.current = containerEl;\n    // eslint-disable-next-line no-param-reassign\n    ref.current = externalWindow;\n    return () => externalWindow.close();\n  }, []);\n\n  return containerRef.current ? ReactDOM.createPortal(children, containerRef.current) : false;\n});\n\nconst initialEmails = [\n  {\n    subject: 'Security email', from: 'security@email.com', content: 'Automatic security email',\n  },\n  {\n    subject: 'Alert email', from: 'alert@email.com', content: 'Automatic alert email',\n  },\n  {\n    subject: 'Test email', from: 'test@email.com', content: 'Automatic test email',\n  },\n  {\n    subject: 'Offer email', from: 'offer@email.com', content: 'Automatic offer email',\n  },\n  {\n    subject: 'Email', from: 'random@email.com', content: 'Random email',\n  },\n];\n\nconst CSS_FILES = ['https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css', 'https://cdn.jsdelivr.net/npm/@mdi/font@6.6.96/css/materialdesignicons.min.css'];\n\nconst WindowSample = () => {\n  const ref = useRef();\n  const [emails, setEmails] = useState(initialEmails);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [datetime, setDateTime] = useState(Date.now());\n  const currentDate = new Date(datetime);\n  const currentEmail = emails[selectedIndex];\n\n  useEffect(() => {\n    window.setInterval(() => {\n      setDateTime(Date.now());\n    }, 1000);\n  }, []);\n\n  const handleSelect = (index) => {\n    if (ref.current && currentEmail) {\n      ref.current.focus();\n    }\n    setSelectedIndex(index);\n    if (!emails[index].isRead) {\n      emails[index].isRead = true;\n      setEmails(emails);\n    }\n  };\n  const handleClose = () => setSelectedIndex(-1);\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">\n        Emails\n      </p>\n      <div className=\"panel-block\">{currentDate.toLocaleDateString()} - {currentDate.toLocaleTimeString()}</div>\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input className=\"input\" type=\"text\" placeholder=\"Search\" />\n          <span className=\"icon is-left\">\n            <i className=\"mdi mdi-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n      {emails.map((email, index) => (\n        <a\n          href=\"#\"\n          className=\"panel-block\"\n          onClick={(e) => {\n            e.preventDefault();\n            handleSelect(index);\n          }}\n        >\n          <span className=\"panel-icon\">\n            <i className={!email.isRead ? 'mdi mdi-email' : 'mdi mdi-email-open'} aria-hidden=\"true\" />\n          </span>\n          <strong>{email.subject}</strong>&nbsp; (<small>{email.from}</small>)\n        </a>\n      ))}\n\n      <div className=\"panel-block\">\n        <button className=\"button is-link is-outlined is-fullwidth\">\n          Reset all filters\n        </button>\n      </div>\n\n      {currentEmail && (\n      <WindowPortal width={600} height={400} ref={ref} onClose={handleClose} cssFiles={CSS_FILES}>\n        <div className=\"box\">\n          <article className=\"media\">\n            <div className=\"media-content\">\n              <div className=\"content\">\n                <p className=\"title is-5\">{currentEmail.subject}</p>\n                <p className=\"subtitle is-6\">{currentEmail.from}</p>\n              </div>\n              <div className=\"content\">{currentEmail.content}</div>\n              <nav className=\"level is-mobile\">\n                <div className=\"level-left\">\n                  <a className=\"level-item\">\n                    <span className=\"icon is-small\"><i className=\"mdi mdi-reply\" /></span>\n                  </a>\n                  <a className=\"level-item\">\n                    <span className=\"icon is-small\"><i className=\"mdi mdi-tweet\" /></span>\n                  </a>\n                  <a className=\"level-item\">\n                    <span className=\"icon is-small\"><i className=\"mdi mdi-heart\" /></span>\n                  </a>\n                  <span className=\"level-item\">\n                    {currentDate.toLocaleDateString()} - {currentDate.toLocaleTimeString()}\n                  </span>\n                </div>\n              </nav>\n            </div>\n            <div className=\"media-right\">\n              <button className=\"delete\" onClick={handleClose} />\n            </div>\n          </article>\n        </div>\n      </WindowPortal>\n      )}\n    </nav>\n  );\n};\n\n// eslint-disable-next-line max-len\nconst Portal = ({ children, container }) => (container ? ReactDOM.createPortal(children, container) : null);\nconst Modal = ({\n  open, onClose, children, hiddenBackground,\n}) => (\n  <Portal container={document.body}>\n    <div className={`modal ${open ? 'is-active' : ''}`}>\n      {!hiddenBackground && <div aria-hidden=\"true\" className=\"modal-background\" onClick={onClose} />}\n      <div className=\"modal-content\">{children}</div>\n      <button className=\"modal-close is-large\" aria-label=\"close\" onClick={onClose} />\n    </div>\n  </Portal>\n);\n\nconst ModalSample = () => {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <div className=\"block\">\n      <button className=\"button is-primary\" onClick={() => setOpen(true)}>Abrir Modal</button>\n      <Modal open={isOpen} onClose={() => setOpen(false)}>\n        <div className=\"box mx-4\">\n          <article className=\"media\">\n            <div className=\"media-content\">\n              <div className=\"content\">\n                <p>\n                  <strong>John Smith</strong> <small>@johnsmith</small> <small>31m</small>\n                  <br />\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Aenean efficitur sit amet massa fringilla egestas.\n                  Nullam condimentum luctus turpis.\n                </p>\n              </div>\n            </div>\n          </article>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nconst Notification = ({\n  open, onClose, children, className, position, duration = 3000,\n}) => {\n  const style = position === 'top' ? { top: '10%' } : { bottom: '10%' };\n\n  useEffect(() => {\n    if (!open) return undefined;\n    const timeId = setTimeout(onClose, duration);\n    return () => clearTimeout(timeId);\n  }, [open]);\n\n  return (\n    open && (\n    <Portal container={document.body}>\n      <div style={style} className={`notification-custom notification ${className}`}>\n        <button className=\"delete\" onClick={onClose} aria-label=\"Close notification\" />\n        {children}\n      </div>\n    </Portal>\n    )\n  );\n};\n\nconst useNotification = () => {\n  const [isOpen, setOpen] = useState(false);\n  const show = () => setOpen(true);\n  const hide = () => setOpen(false);\n  return {\n    show, hide, isOpen,\n  };\n};\n\nconst NotificationSample = () => {\n  const { show, hide, isOpen } = useNotification();\n\n  return (\n    <div className=\"block\">\n      <button className=\"button is-primary\" onClick={show}>Abrir Notificação</button>\n      <Notification className=\"is-light is-info\" position=\"top\" open={isOpen} onClose={hide}>\n        Primar lorem ipsum dolor sit amet, consectetur\n        adipiscing elit lorem ipsum dolor. <strong>Pellentesque risus mi</strong>\n      </Notification>\n    </div>\n  );\n};\n\nconst ActionBar = () => {\n  const [active, setActive] = useState(false);\n  const toogle = (e) => {\n    if (e) e.preventDefault();\n    setActive((a) => !a);\n  };\n  return (\n    (\n      <Portal container={document.body}>\n        <nav className={`navbar actionbar ${active ? 'is-active' : ''}`} role=\"navigation\" aria-label=\"main navigation\">\n\n          <div id=\"navbarBasicExample\" className=\"navbar-menu is-active\">\n            <div className=\"navbar-start\">\n              <a href=\"#\" className=\"navbar-item\" onClick={toogle}>\n                <strong>Barra de ações</strong> <small>criada através de um Portal</small>\n                <span className=\"icon\">\n                  <i className={active ? 'mdi mdi-arrow-down-drop-circle-outline' : 'mdi mdi-arrow-up-drop-circle-outline'} aria-hidden=\"true\" />\n                </span>\n              </a>\n            </div>\n\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <button className=\"button is-primary\">\n                    <strong>Close</strong>\n                  </button>\n                  <button className=\"button is-light\">\n                    Confirm\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </Portal>\n    )\n  );\n};\n\nconst CoolPortal = () => (\n  <div className=\"content\">\n    <h1 className=\"subtitle is-1\">Portal</h1>\n    <hr />\n    <p>Implementações usando <strong>React Portals</strong> , para mais detalhes pode conferir a <a href=\"https://pt-br.reactjs.org/docs/portals.html\" targe=\"blank\">documentação oficial.</a></p>\n    <p>\n      Uma abordagem bem interessante é a criação de um componente Portal para usar\n      portais de forma mais declarativa dentro do JSX. Segue um exemplo:\n    </p>\n    <Code>\n      {`const Portal = ({ children, container }) => {\n  return (container ? ReactDOM.createPortal(children, container) : null);\n};\n// Exemplo de uso\n<Portal container={document.body}>\n  Conteudo carregado no fim da página\n</Portal>`}\n    </Code>\n    <p>\n      Os casos mais comuns são modais, tooltips, popovers e outros componentes que precisam ser\n      renderizados acima dos elementos atuais da página para serem posicionados de forma\n      absoluta ou relativa a outro elemento fora do contexto atual. Seguem alguns exemplos:\n    </p>\n    <Code>\n      {`//Implementação de modal usando Portal\nconst Modal = ({ open, onClose, children, hiddenBackground }) => (\n  <Portal container={document.body}>\n    <div className={open ? 'modal is-active' : 'modal'}>\n      {!hiddenBackground && <div aria-hidden=\"true\" className=\"modal-background\" onClick={onClose} />}\n      <div className=\"modal-content\">{children}</div>\n      <button className=\"modal-close is-large\" aria-label=\"close\" onClick={onClose} />\n    </div>\n  </Portal>\n);\n// Exemplo de uso\n<Modal open>\n  Conteudo da modal\n</Modal>\n`}\n    </Code>\n    <ModalSample />\n\n    <Code>\n      {`//Implementação de notificações usando Portal\nconst Notification = ({ open, onClose, children, position }) => {\n  const style = position === 'top' ? { top: '10%' } : { bottom: '10%' };\n  return (\n    open && (\n    <Portal container={document.body}>\n      <div style={style} className='notification-custom notification'>\n        <button className=\"delete\" onClick={onClose} aria-label=\"Close notification\" />\n        {children}\n      </div>\n    </Portal>\n    )\n  );\n};\n// Exemplo de uso\n<Notification position=\"top\" open>\n  Conteudo da notificação\n</Notification>\n`}\n    </Code>\n    <NotificationSample />\n    <p>\n      Apesar de interessante estes exemplos, dificilmente eles serão implementados manualmente em\n      um projeto real, nem recomendo isso, pois para todos estes cenários existem libs excelentes.\n    </p>\n    <p>\n      Os casos mais comuns que ja encontrei para o uso de <strong>Portals</strong>\n      são barras de ação fixa no fim da página, como a implementada nesta página,\n      botões de voltar ao topo em páginas longas, janelas de chat que abrem por cima\n      do conteúdo da página, entre outros outros usos bem parecidos.\n    </p>\n    <ActionBar />\n    <p>\n      Navegando na internet encontrei um exemplo bem diferente do convencional que é\n      o uso de Portals para manipulação de janelas de popup, conforme este\n      <a href=\"https://medium.com/hackernoon/using-a-react-16-portal-to-do-something-cool-2a2d627b0202\" target=\"blank\"> tutorial</a>. <br />\n      E com base nele implementei o exemplo da caixa de email abaixo.\n    </p>\n    <WindowSample />\n  </div>\n);\n\nCoolPortal.propTypes = {};\n\nCoolPortal.defaultProps = {};\n\nexport default CoolPortal;\n","/* eslint-disable react/prop-types */\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  useLocation,\n  Outlet,\n  NavLink,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport ErrorBoundary from './pages/ErrorBoudary';\nimport Pooling from './pages/Pooling';\nimport WebWorker from './pages/WebWorker';\nimport Random from './pages/Random';\nimport Lifecycle from './pages/Lifecycle';\nimport Forms from './pages/Forms';\nimport logo from './logo.svg';\nimport './App.css';\nimport Fetch from './pages/Fetch';\nimport DynamicComponent from './pages/DynamicComponent';\nimport CoolPortal from './pages/CoolPortal';\n\nconst experiments = [\n  {\n    name: 'Error Boundary',\n    path: '/error-boundary',\n    iconClass: 'mdi-bug',\n    description: 'Entendendo a aplicação pratica de error boundaries',\n  },\n  {\n    name: 'Pooling',\n    path: '/pooling',\n    iconClass: 'mdi-clipboard-flow-outline',\n    description: 'Testando a eficiencia de implementações diferentes de pooling',\n  },\n  {\n    name: 'Web Worker',\n    path: '/workers',\n    iconClass: 'mdi-account-hard-hat',\n    description: 'Aplicando web workers para mehoria de performance em páginas web',\n  },\n  {\n    name: 'Lifecycle',\n    path: '/lifecycle',\n    iconClass: 'mdi-repeat-variant',\n    description: 'Exemplificando o ciclo de vida do react',\n  },\n  {\n    name: 'Forms',\n    path: '/forms',\n    iconClass: 'mdi-form-textbox',\n    description: 'Validando formas eficientes para tratamento de formulários',\n  },\n  {\n    name: 'Fetch',\n    path: '/fetch',\n    iconClass: 'mdi-post',\n    description: 'Executando o fetch de diferentes formas',\n  },\n  {\n    name: 'Portal',\n    path: '/portal',\n    iconClass: 'mdi-dock-window',\n    description: 'Aplicação prática e exemplos criativos do uso de portais',\n  },\n  {\n    name: 'Dynamic Component',\n    path: '/dynamic',\n    iconClass: 'mdi-puzzle',\n    description: 'Criação de componentes dinamicos e suas aplicações práticas',\n  },\n  {\n    name: 'Random',\n    path: '/random',\n    iconClass: 'mdi-dots-grid',\n    description: 'Coletânea de experiencias genéricas e ainda sem tópico próprio',\n  },\n].sort((a, b) => (a.name < b.name ? -1 : 1));\n\nconst Navbar = () => {\n  const [isOpen, setOpen] = useState(false);\n  const toggleMenu = () => setOpen((open) => !open);\n  return (\n    <nav className=\"navbar is-white\">\n      <div className=\"navbar-brand\">\n        <Link className=\"navbar-item\" to=\"/\">\n          <img src={logo} alt=\"React logo\" height=\"44\" width=\"44\" />\n        </Link>\n        <div tabIndex=\"0\" role=\"button\" className=\"navbar-burger\" onClick={toggleMenu} onKeyPress={toggleMenu}>\n          <span />\n          <span />\n          <span />\n        </div>\n      </div>\n\n      <div className={`navbar-menu ${isOpen ? 'is-active' : ''}`}>\n        <div className=\"navbar-start\">\n          <Link className=\"navbar-item\" to=\"/\">\n            React LAB\n          </Link>\n          {isOpen && (\n          <div className=\"navbar-item has-dropdown is-hoverable\">\n            <p className=\"navbar-link\">\n              Experiments\n            </p>\n            <div className=\"navbar-dropdown is-boxed\">\n              {experiments.map((exp) => (\n                <NavLink\n                  key={exp.path}\n                  to={exp.path}\n                  className={({ isActive }) => (isActive ? 'navbar-item is-active' : 'navbar-item')}\n                >\n                  <span className=\"icon\">\n                    <i className={`mdi ${exp.iconClass}`} />\n                  </span> {exp.name}\n                </NavLink>\n              ))}\n\n            </div>\n          </div>\n          )}\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"field is-grouped\">\n              {/* <p className=\"control\">\n                <a className=\"bd-tw-button button\" data-social-network=\"Twitter\" data-social-action=\"tweet\" data-social-target=\"https://bulma.io\" target=\"_blank\" href=\"https://twitter.com/intent/tweet?text=Bulma: a modern CSS framework based on Flexbox&amp;hashtags=bulmaio&amp;url=https://bulma.io&amp;via=jgthms\" rel=\"noreferrer\">\n                  <span className=\"icon\">\n                    <i className=\"mdi mdi-twitter\" />\n                  </span>\n                  <span>\n                    Tweet\n                  </span>\n                </a>\n              </p> */}\n              <p className=\"control\">\n                <a className=\"button is-primary\" href=\"https://github.com/michael-silva/react-lab\" target=\"_blank\" rel=\"noreferrer\">\n                  <span className=\"icon\">\n                    <i className=\"mdi mdi-github\" />\n                  </span>\n                  <span>Github</span>\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nconst ExperimentCard = ({\n  path, iconClass, title, subtitle, children,\n}) => (\n  <Link to={path}>\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <span className=\"icon is-large\">\n              <i className={`mdi mdi-48px ${iconClass}`} />\n            </span>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n            {subtitle && <p className=\"subtitle is-6\">{subtitle}</p>}\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  </Link>\n);\n\nconst Home = () => (\n  <>\n    <section className=\"hero is-medium\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <p className=\"title\">\n            React LAB\n          </p>\n          <p className=\"subtitle\">\n            Um repositório de experiências práticas com reactjs\n          </p>\n        </div>\n      </div>\n    </section>\n    <div className=\"columns is-multiline\">\n      {experiments.map((exp) => (\n        <div key={exp.path} className=\"column is-one-quarter\">\n          <ExperimentCard title={exp.name} path={exp.path} iconClass={exp.iconClass}>\n            {exp.description}\n          </ExperimentCard>\n        </div>\n      ))}\n    </div>\n  </>\n);\n\nconst Sidebar = ({ }) => {\n  const location = useLocation();\n  const isHome = location.pathname === '/';\n\n  return (\n    <aside className={`menu main-menu ${isHome ? 'menu-hidden' : ''}`}>\n      <p className=\"menu-label\">\n        Experiments\n      </p>\n      <ul className=\"menu-list\">\n        {experiments.map((exp) => (\n          <li key={exp.path}>\n            <NavLink\n              to={exp.path}\n              className={({ isActive }) => (isActive ? 'is-active' : undefined)}\n            >\n              <span className=\"icon\">\n                <i className={`mdi ${exp.iconClass}`} />\n              </span> {exp.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </aside>\n  );\n};\n\nconst Layout = () => {\n  const location = useLocation();\n\n  const [displayLocation, setDisplayLocation] = useState(location);\n  const [transitionStage, setTransistionStage] = useState('fadeIn');\n\n  useEffect(() => {\n    if (location !== displayLocation) setTransistionStage('fadeOut');\n  }, [location, displayLocation]);\n\n  return (\n    <div className=\"columns mt-4\">\n      <div className=\"column is-3 is-hidden-mobile\">\n        <Sidebar />\n      </div>\n      <div className=\"column is-9\">\n        <div\n          className={`box ${transitionStage}`}\n          onAnimationEnd={() => {\n            if (transitionStage === 'fadeOut') {\n              setTransistionStage('fadeIn');\n              setDisplayLocation(location);\n            }\n          }}\n        >\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Navbar />\n    <div className=\"container is-fluid\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route element={<Layout />}>\n          <Route path=\"/error-boundary\" element={<ErrorBoundary />} />\n          <Route path=\"/pooling\" element={<Pooling />} />\n          <Route path=\"/workers\" element={<WebWorker />} />\n          <Route path=\"/lifecycle\" element={<Lifecycle />} />\n          <Route path=\"/forms\" element={<Forms />} />\n          <Route path=\"/portal\" element={<CoolPortal />} />\n          <Route path=\"/dynamic\" element={<DynamicComponent />} />\n          <Route path=\"/fetch\" element={<Fetch />} />\n          <Route path=\"/random\" element={<Random />} />\n        </Route>\n      </Routes>\n\n    </div>\n  </Router>\n);\n\nexport default App;\n","const reportFID = (callback) => (entry) => {\n  let status = 'POOR';\n  if (entry.value <= 300) status = 'NEEDS IMPROVEMENT';\n  if (entry.value <= 100) status = 'GOOD!!';\n  return callback({ ...entry, status });\n};\n\nconst reportLCP = (callback) => (entry) => {\n  let status = 'POOR';\n  if (entry.value <= 4000) status = 'NEEDS IMPROVEMENT';\n  if (entry.value <= 2500) status = 'GOOD!!';\n  return callback({ ...entry, status });\n};\n\nconst reportCLS = (callback) => (entry) => {\n  let status = 'POOR';\n  if (entry.value <= 0.25) status = 'NEEDS IMPROVEMENT';\n  if (entry.value <= 0.1) status = 'GOOD!!';\n  return callback({ ...entry, status });\n};\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(reportCLS(onPerfEntry));\n      getFID(reportFID(onPerfEntry));\n      getFCP(onPerfEntry);\n      getLCP(reportLCP(onPerfEntry));\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}